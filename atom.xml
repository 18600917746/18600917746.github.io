<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cheng</title>
  
  <subtitle>腹有诗书气自华</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://18600917746.github.io/"/>
  <updated>2019-06-13T04:00:18.491Z</updated>
  <id>https://18600917746.github.io/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hello-java-http</title>
    <link href="https://18600917746.github.io/2019/06/13/hello-java-http/"/>
    <id>https://18600917746.github.io/2019/06/13/hello-java-http/</id>
    <published>2019-06-13T01:58:55.000Z</published>
    <updated>2019-06-13T04:00:18.491Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、有注解"><a href="#一、有注解" class="headerlink" title="一、有注解"></a>一、有注解</h2><h3 id="1、请求路径参数"><a href="#1、请求路径参数" class="headerlink" title="1、请求路径参数"></a>1、请求路径参数</h3><ul><li>@PathVariable 接收 <code>动态路由</code> </li><li>@RequestParam 接收 <code>查询参数</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/demo/123?name=cheng</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/demo/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo</span><span class="params">(@PathVariable(name = <span class="string">"id"</span>)</span> String id, @<span class="title">RequestParam</span><span class="params">(name = <span class="string">"name"</span>)</span> String name) </span>&#123;</span><br><span class="line">    System.out.println(id); <span class="comment">// 123</span></span><br><span class="line">    System.out.println(name); <span class="comment">// cheng</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、Body参数"><a href="#2、Body参数" class="headerlink" title="2、Body参数"></a>2、Body参数</h3><ul><li><p><code>post</code> <code>application/json</code> 请求</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    type:<span class="string">'post'</span>,</span><br><span class="line">    url:<span class="string">'/dome1'</span>,</span><br><span class="line">    data:&#123;</span><br><span class="line">        id:<span class="number">1</span>,</span><br><span class="line">        name:<span class="string">'测试'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>@RequestBody 接收 <code>body</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(path = <span class="string">"/demo1"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">(@RequestBody Person person)</span> </span>&#123;</span><br><span class="line">    System.out.println(person.toString()); <span class="comment">// id:1;name=测试;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(path = <span class="string">"/demo1"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">(@RequestBody Map&lt;String, String&gt; person)</span> </span>&#123;</span><br><span class="line">    System.out.println(person.get(<span class="string">"name"</span>)); <span class="comment">// 测试</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>@RequestBody 接收 <code>文件</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(path = <span class="string">"/demo1"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">(@RequestBody MultiValueMap&lt;String,String&gt;map file)</span> </span>&#123;</span><br><span class="line">    System.out.println(file); <span class="comment">// file[0]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>@RequestBody 接收 <code>多文件</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(path = <span class="string">"/demo1"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">(@RequestBody MultiValueMap&lt;String,String&gt;map[] file)</span> </span>&#123;</span><br><span class="line">    System.out.println(file); <span class="comment">//  [] </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、-无注解-（一般都会注解）"><a href="#二、-无注解-（一般都会注解）" class="headerlink" title="二、 无注解 （一般都会注解）"></a>二、 无注解 （一般都会注解）</h2><h2 id="三、-获取请求头"><a href="#三、-获取请求头" class="headerlink" title="三、 获取请求头"></a>三、 获取请求头</h2><ul><li>@RequestHeader 获取 <code>请求头</code></li><li>@CookieValue 获取 <code>Cookie</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/demo3"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo3</span><span class="params">(@RequestHeader(name = <span class="string">"myHeader"</span>)</span> String myHeader,</span></span><br><span class="line"><span class="function">        @<span class="title">CookieValue</span><span class="params">(name = <span class="string">"myCookie"</span>)</span> String myCookie) </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"myHeader="</span> + myHeader);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注解学习"><a href="#注解学习" class="headerlink" title="注解学习"></a>注解学习</h2><ul><li>@RequestMapping <ul><li>method - 指定的类型</li><li>value - 指定请求的地址</li><li>produces - 指定响应类型</li><li>comsumes - 指定请求类型</li><li>header - 根据请求中的消息头内容缩小请求映射的范围</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/test1"</span>, method = RequestMethod.POST)</span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、有注解&quot;&gt;&lt;a href=&quot;#一、有注解&quot; class=&quot;headerlink&quot; title=&quot;一、有注解&quot;&gt;&lt;/a&gt;一、有注解&lt;/h2&gt;&lt;h3 id=&quot;1、请求路径参数&quot;&gt;&lt;a href=&quot;#1、请求路径参数&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="后端" scheme="https://18600917746.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Java" scheme="https://18600917746.github.io/categories/%E5%90%8E%E7%AB%AF/Java/"/>
    
      <category term="Spring Boot" scheme="https://18600917746.github.io/categories/%E5%90%8E%E7%AB%AF/Java/Spring-Boot/"/>
    
    
      <category term="Java" scheme="https://18600917746.github.io/tags/Java/"/>
    
      <category term="Spring Boot" scheme="https://18600917746.github.io/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>hello-dart</title>
    <link href="https://18600917746.github.io/2019/06/08/hello-dart/"/>
    <id>https://18600917746.github.io/2019/06/08/hello-dart/</id>
    <published>2019-06-08T14:31:59.000Z</published>
    <updated>2019-06-11T11:24:48.681Z</updated>
    
    <content type="html"><![CDATA[<h3 id="程序主入口"><a href="#程序主入口" class="headerlink" title="程序主入口"></a>程序主入口</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">main() &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'你好'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Dart-的数据类型"><a href="#Dart-的数据类型" class="headerlink" title="Dart 的数据类型"></a>Dart 的数据类型</h3><ul><li>Numbers（数值）<ul><li>int（整型）</li><li>double（浮点）</li></ul></li><li>Strings（字符串）</li><li>Booleans（布尔）</li><li>List（数组）<ul><li>在 Dart 中，数组是列表对象，所以大多数人称为列表</li></ul></li><li>Maps（字典）<ul><li>通常来说，Map 是一个键值对的对象。<h3 id="Dart-变量定义"><a href="#Dart-变量定义" class="headerlink" title="Dart 变量定义"></a>Dart 变量定义</h3></li></ul></li><li>使用 <code>var</code> 定义变量</li><li>使用 <code>数据类型</code> 定义变量</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Str = <span class="string">'使用 var 定义的变量'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">String</span> Str = <span class="string">'使用 数据类型 定义的变量'</span>;</span><br><span class="line"><span class="built_in">int</span> Int = <span class="number">12</span>;</span><br></pre></td></tr></table></figure><h3 id="Dart-常量定义"><a href="#Dart-常量定义" class="headerlink" title="Dart 常量定义"></a>Dart 常量定义</h3><ul><li>const</li><li>final</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> NAME = <span class="string">'nike'</span>;</span><br><span class="line"><span class="keyword">final</span> ID = <span class="string">'12'</span>;</span><br></pre></td></tr></table></figure><h3 id="Dart-const-与-final-的区别"><a href="#Dart-const-与-final-的区别" class="headerlink" title="Dart const 与 final 的区别"></a>Dart <code>const</code> 与 <code>final</code> 的区别</h3><ul><li><h3 id="Dart-的吗，命名规则"><a href="#Dart-的吗，命名规则" class="headerlink" title="Dart 的吗，命名规则"></a>Dart 的吗，命名规则</h3></li><li>1、变量名必须由数字、字母、下划线和美元符号（$）组成</li><li>2、标识符开头不能是数字</li><li>3、标识符不能是保留字和关键字</li><li>4、变量的名称是区分大小写的</li><li>5、标识符（变量的名称）一定要见名知意：变量名建议是名词，方法名建议是动词</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;程序主入口&quot;&gt;&lt;a href=&quot;#程序主入口&quot; class=&quot;headerlink&quot; title=&quot;程序主入口&quot;&gt;&lt;/a&gt;程序主入口&lt;/h3&gt;&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
      <category term="Dart" scheme="https://18600917746.github.io/categories/Dart/"/>
    
    
      <category term="Dart" scheme="https://18600917746.github.io/tags/Dart/"/>
    
  </entry>
  
  <entry>
    <title>hello-jsSkill</title>
    <link href="https://18600917746.github.io/2019/06/06/hello-jsSkill/"/>
    <id>https://18600917746.github.io/2019/06/06/hello-jsSkill/</id>
    <published>2019-06-06T02:44:30.000Z</published>
    <updated>2019-06-06T03:24:23.100Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、获取两个数组的交集"><a href="#1、获取两个数组的交集" class="headerlink" title="1、获取两个数组的交集"></a>1、获取两个数组的交集</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> list1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]; </span><br><span class="line"><span class="keyword">var</span> list2 = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> intersection = <span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> s = <span class="keyword">new</span> <span class="built_in">Set</span>(b);</span><br><span class="line">  <span class="keyword">return</span> a.filter(<span class="function"><span class="params">x</span> =&gt;</span> s.has(x));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">intersection(list1,list2);</span><br></pre></td></tr></table></figure><h3 id="2、替换手机号码中间4位为"><a href="#2、替换手机号码中间4位为" class="headerlink" title="2、替换手机号码中间4位为 ****"></a>2、替换手机号码中间4位为 ****</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> protectPhone = <span class="function">(<span class="params">phone</span>)=&gt;</span> phone.replace(<span class="regexp">/(\d&#123;3&#125;)\d&#123;4&#125;(\d&#123;4&#125;)/</span>, <span class="string">'$1****$2'</span>);</span><br><span class="line"></span><br><span class="line">protectPhone(<span class="string">'18600910010'</span>);</span><br></pre></td></tr></table></figure><h3 id="3、对象数组指定-key-排序"><a href="#3、对象数组指定-key-排序" class="headerlink" title="3、对象数组指定 key 排序"></a>3、对象数组指定 <code>key</code> 排序</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> list = [&#123;</span><br><span class="line">    name:<span class="string">'n1'</span>,</span><br><span class="line">    id:<span class="number">1</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">    name:<span class="string">'n2'</span>,</span><br><span class="line">    id:<span class="number">2</span></span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> objSort=<span class="function">(<span class="params">key,sortType</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function">(<span class="params">a,b</span>)=&gt;</span> sortType ? a[key] - b[key] : b[key] - a[key];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">list.sort(objSort(<span class="string">'name'</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1、获取两个数组的交集&quot;&gt;&lt;a href=&quot;#1、获取两个数组的交集&quot; class=&quot;headerlink&quot; title=&quot;1、获取两个数组的交集&quot;&gt;&lt;/a&gt;1、获取两个数组的交集&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;
      
    
    </summary>
    
      <category term="前端" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Js" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/Js/"/>
    
    
      <category term="Js片段" scheme="https://18600917746.github.io/tags/Js%E7%89%87%E6%AE%B5/"/>
    
  </entry>
  
  <entry>
    <title>hello-flutter-SharedPreference</title>
    <link href="https://18600917746.github.io/2019/05/31/hello-flutter-SharedPreference/"/>
    <id>https://18600917746.github.io/2019/05/31/hello-flutter-SharedPreference/</id>
    <published>2019-05-31T07:53:10.000Z</published>
    <updated>2019-05-31T09:20:17.691Z</updated>
    
    <content type="html"><![CDATA[<h3 id="shared-preferences-dart-第三方组件"><a href="#shared-preferences-dart-第三方组件" class="headerlink" title="shared_preferences.dart 第三方组件"></a>shared_preferences.dart 第三方组件</h3><ul><li>shared_preferences.dart 官方开源的轻量级数据存储库，并且屏蔽了 Android 和 iOS 平台上使用 K-V 型数据的差异</li></ul><h3 id="使用-shared-preferences-dart-前需要添加配置并更新依赖："><a href="#使用-shared-preferences-dart-前需要添加配置并更新依赖：" class="headerlink" title="使用 shared_preferences.dart 前需要添加配置并更新依赖："></a>使用 shared_preferences.dart 前需要添加配置并更新依赖：</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">shared_preferences:</span> <span class="string">^0.5.1+1</span></span><br></pre></td></tr></table></figure><h3 id="然后，在需要使用该库的地方引入该库："><a href="#然后，在需要使用该库的地方引入该库：" class="headerlink" title="然后，在需要使用该库的地方引入该库："></a>然后，在需要使用该库的地方引入该库：</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:shared_preferences/shared_preferences.dart'</span>;</span><br></pre></td></tr></table></figure><p>###<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharedPreferences sharedPreferences = <span class="keyword">await</span> SharedPreferences.getInstance();</span><br></pre></td></tr></table></figure></p><h3 id="读写数据"><a href="#读写数据" class="headerlink" title="读写数据"></a>读写数据</h3><blockquote><p>获取到 SharedPreferences 对象之后，我们可以通过一系列的 get 和 set 方法读写数据。目前 shared_preferences.dart 库支持的数据类型有：</p></blockquote><ul><li><code>bool</code>：布尔型数据，对应 <code>getBool</code> 和 <code>setBool</code> 两个方法</li><li><code>int</code>：<code>int</code> 型数据，对应 <code>getInt</code> 和 <code>setInt</code> 两个方法</li><li><code>double</code>：<code>double</code> 型数据，对应 <code>getDouble</code> 和 <code>setDouble</code> 两个方法</li><li><code>String</code>：<code>String</code> 型数据，对应 <code>getString</code> 和 <code>setString</code> 两个方法</li><li><code>List&lt;String&gt;</code>：<code>List&lt;String&gt;</code> 型数据，对用 <code>getStringList</code> 和 <code>setStringList</code> 两个方法</li></ul><h3 id="写入数据的示例："><a href="#写入数据的示例：" class="headerlink" title="写入数据的示例："></a>写入数据的示例：</h3><ul><li>写入数据需要使用 await </li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = <span class="keyword">await</span> sharedPreferences.setString(<span class="string">"key"</span>, <span class="string">"value"</span>);</span><br></pre></td></tr></table></figure><h3 id="下面是读取数据的示例："><a href="#下面是读取数据的示例：" class="headerlink" title="下面是读取数据的示例："></a>下面是读取数据的示例：</h3><ul><li>读取操作并不需要使用 await。</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> result = sharedPreferences.getString(<span class="string">"key"</span>);</span><br></pre></td></tr></table></figure><h3 id="清空数据"><a href="#清空数据" class="headerlink" title="清空数据"></a>清空数据</h3><ul><li>SharedPreferences 中提供了 remove 方法用来删除特定 key 的数据，以及 clear 方法用于删除所有的数据:</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> sharedPreferences.remove(<span class="string">"key"</span>);</span><br><span class="line"><span class="keyword">await</span> sharedPreferences.clear();</span><br></pre></td></tr></table></figure><h3 id="问题处理一"><a href="#问题处理一" class="headerlink" title="问题处理一"></a>问题处理一</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.MissingPluginException(No implementation found for method getAll on channel plugins.flutter.io/shared_preferences)</span><br></pre></td></tr></table></figure><ul><li>也就是说，在你测试代码使用shared_preferences之前，调用一下</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharedPreferences.setMockInitialValues(&#123;&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;shared-preferences-dart-第三方组件&quot;&gt;&lt;a href=&quot;#shared-preferences-dart-第三方组件&quot; class=&quot;headerlink&quot; title=&quot;shared_preferences.dart 第三方组件&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="App" scheme="https://18600917746.github.io/categories/App/"/>
    
      <category term="Flutter" scheme="https://18600917746.github.io/categories/App/Flutter/"/>
    
      <category term="SharedPreference" scheme="https://18600917746.github.io/categories/App/Flutter/SharedPreference/"/>
    
    
      <category term="App" scheme="https://18600917746.github.io/tags/App/"/>
    
      <category term="Flutter" scheme="https://18600917746.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>hello-flutter-http</title>
    <link href="https://18600917746.github.io/2019/05/30/hello-flutter-http/"/>
    <id>https://18600917746.github.io/2019/05/30/hello-flutter-http/</id>
    <published>2019-05-30T09:46:00.000Z</published>
    <updated>2019-06-06T09:22:39.686Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用第三方库"><a href="#使用第三方库" class="headerlink" title="使用第三方库"></a>使用第三方库</h3><p><a href="https://pub.dev/" target="_blank" rel="noopener">https://pub.dev/</a></p><h3 id="快速生成实体类："><a href="#快速生成实体类：" class="headerlink" title="快速生成实体类："></a>快速生成实体类：</h3><p><a href="https://app.quicktype.io/" target="_blank" rel="noopener">https://app.quicktype.io/</a></p><h3 id="http-http-dart"><a href="#http-http-dart" class="headerlink" title="http/http.dart"></a>http/http.dart</h3><blockquote><p>package:http/http.dart 是一个开源的基于 Flutter 的网络请求框架。</p></blockquote><ul><li>使用 http/http.dart 库之前，我们需要先在 pubspec.yaml 文件中添加改库的依赖：</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dependencies:</span></span><br><span class="line"><span class="attr">  http:</span> <span class="string">^0.12.0+1</span></span><br></pre></td></tr></table></figure><ul><li>然后在项目的根目录使用如下命令安装该库：</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">flutter</span> <span class="string">packages</span> <span class="string">get</span></span><br></pre></td></tr></table></figure><ul><li>最后，在项目中需要使用的地方引入该库：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:http/http.dart'</span>;</span><br></pre></td></tr></table></figure><ul><li>或者使用别名的引用方式：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:http/http.dart'</span> <span class="keyword">as</span> http;</span><br></pre></td></tr></table></figure><h3 id="get-请求"><a href="#get-请求" class="headerlink" title="get 请求"></a><code>get</code> 请求</h3><ul><li>使用 <code>http/http.dart</code> 发送 <code>GET</code> 请求的实例代码如下：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:convert'</span> <span class="keyword">as</span> convert;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:http/http.dart'</span> <span class="keyword">as</span> http;</span><br><span class="line"></span><br><span class="line">httpRequestGet() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> url = <span class="string">'http://tj.nineton.cn/Heart/index/all?city=CHSH000000&amp;language=zh-chs'</span>;</span><br><span class="line">  http.Response response = <span class="keyword">await</span> http.<span class="keyword">get</span>(url);</span><br><span class="line">  <span class="keyword">if</span> (response.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonResponse = convert.jsonDecode(response.body);</span><br><span class="line">    <span class="keyword">var</span> itemCount = jsonResponse[<span class="string">'totalItems'</span>];</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Number of books about http: <span class="subst">$itemCount</span>."</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Request failed with status: <span class="subst">$&#123;response.statusCode&#125;</span>."</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>或者使用如下方式：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:convert'</span> <span class="keyword">as</span> convert;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:http/http.dart'</span> <span class="keyword">as</span> http;</span><br><span class="line"></span><br><span class="line">httpRequestGet() &#123;</span><br><span class="line">  <span class="keyword">var</span> url = <span class="string">'http://tj.nineton.cn/Heart/index/all?city=CHSH000000&amp;language=zh-chs'</span>;</span><br><span class="line">  http.Client().<span class="keyword">get</span>(url).then((http.Response response) &#123;</span><br><span class="line">    <span class="keyword">if</span> (response.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> jsonResponse = convert.jsonDecode(response.body);</span><br><span class="line">      <span class="keyword">var</span> itemCount = jsonResponse[<span class="string">'totalItems'</span>];</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">"Number of books about http: <span class="subst">$itemCount</span>."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="POST-请求"><a href="#POST-请求" class="headerlink" title="POST 请求"></a><code>POST</code> 请求</h3><ul><li>与 <code>GET</code> 请求不同的是，<code>POST</code> 请求需要将数据写入到 <code>body</code> 里面：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:convert'</span> <span class="keyword">as</span> convert;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:http/http.dart'</span> <span class="keyword">as</span> http;</span><br><span class="line"></span><br><span class="line">httpRequestPost() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> url = <span class="string">"request_url"</span>;</span><br><span class="line">  <span class="keyword">var</span> params = <span class="keyword">new</span> <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt;();</span><br><span class="line">  params[<span class="string">'param_1'</span>] = <span class="string">"value_1"</span>;</span><br><span class="line">  params[<span class="string">'param_2'</span>] = <span class="string">"value_2"</span>;</span><br><span class="line">  params[<span class="string">'param_3'</span>] = <span class="string">"value_3"</span>;</span><br><span class="line">  <span class="keyword">var</span> client = http.Client();</span><br><span class="line">  http.Response response = <span class="keyword">await</span> client.post(url, body: params);</span><br><span class="line">  <span class="keyword">if</span> (response.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> responseMessage = response.body;</span><br><span class="line">    <span class="built_in">print</span>(responseMessage);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>同样的，上述请求也可以使用如下代码实现：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">import</span> <span class="string">'dart:convert'</span> <span class="keyword">as</span> convert;</span><br><span class="line"> <span class="keyword">import</span> <span class="string">'package:http/http.dart'</span> <span class="keyword">as</span> http;</span><br><span class="line"></span><br><span class="line">httpRequestPost() &#123;</span><br><span class="line">   <span class="keyword">var</span> url = <span class="string">"request_url"</span>;</span><br><span class="line">   <span class="keyword">var</span> params = <span class="keyword">new</span> <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt;();</span><br><span class="line">   params[<span class="string">'param_1'</span>] = <span class="string">"value_1"</span>;</span><br><span class="line">   params[<span class="string">'param_2'</span>] = <span class="string">"value_2"</span>;</span><br><span class="line">   params[<span class="string">'param_3'</span>] = <span class="string">"value_3"</span>;</span><br><span class="line">   http.Client().post(url, body: params).then((http.Response response) &#123;</span><br><span class="line">     <span class="keyword">if</span> (response.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">       <span class="keyword">var</span> responseMessage = response.body;</span><br><span class="line">       <span class="built_in">print</span>(responseMessage);</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="重要的事情放在最后面，http-一般使用第三方工具库-Dio"><a href="#重要的事情放在最后面，http-一般使用第三方工具库-Dio" class="headerlink" title="重要的事情放在最后面，http 一般使用第三方工具库 Dio"></a>重要的事情放在最后面，<code>http</code> 一般使用第三方工具库 <code>Dio</code></h2><p><a href="https://github.com/flutterchina/dio" target="_blank" rel="noopener">Dio</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;使用第三方库&quot;&gt;&lt;a href=&quot;#使用第三方库&quot; class=&quot;headerlink&quot; title=&quot;使用第三方库&quot;&gt;&lt;/a&gt;使用第三方库&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://pub.dev/&quot; target=&quot;_blank&quot; rel=&quot;noopen
      
    
    </summary>
    
      <category term="App" scheme="https://18600917746.github.io/categories/App/"/>
    
      <category term="Flutter" scheme="https://18600917746.github.io/categories/App/Flutter/"/>
    
      <category term="Http" scheme="https://18600917746.github.io/categories/App/Flutter/Http/"/>
    
    
      <category term="App" scheme="https://18600917746.github.io/tags/App/"/>
    
      <category term="Flutter" scheme="https://18600917746.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>hello-flutter-routes</title>
    <link href="https://18600917746.github.io/2019/05/30/hello-flutter-routes/"/>
    <id>https://18600917746.github.io/2019/05/30/hello-flutter-routes/</id>
    <published>2019-05-30T06:55:26.000Z</published>
    <updated>2019-06-06T09:25:22.838Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Navigator提供了操作-Routes-的两种方法：-Navigator-push-和-Navigator-pop。"><a href="#Navigator提供了操作-Routes-的两种方法：-Navigator-push-和-Navigator-pop。" class="headerlink" title="Navigator提供了操作 Routes 的两种方法： Navigator.push 和 Navigator.pop。"></a>Navigator提供了操作 Routes 的两种方法： Navigator.push 和 Navigator.pop。</h3><ul><li>Navigator.pushNamed<ul><li>使用 <code>Navigator.pushNamed</code> 方法的 <code>arguments</code> 来传递参数</li><li>使用 <code>ModalRoute</code> 接收数据<figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Navigator.pushNamed(context, <span class="string">'/Citys'</span>,arguments: curCity);</span><br></pre></td></tr></table></figure></li></ul></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ModalRoute.of(context).settings.arguments</span><br></pre></td></tr></table></figure><ul><li>Navigator.pop</li></ul><h3 id="在-Flutter-中获取-Navigator-的实例"><a href="#在-Flutter-中获取-Navigator-的实例" class="headerlink" title="在 Flutter 中获取 Navigator 的实例"></a>在 Flutter 中获取 Navigator 的实例</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Navigator.of(context);</span><br></pre></td></tr></table></figure><h3 id="路由数据传递"><a href="#路由数据传递" class="headerlink" title="路由数据传递"></a>路由数据传递</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">InheritedWidget</span><br></pre></td></tr></table></figure><h2 id="重要的事情放在最后面，路由管理一般使用第三方库-FLURO"><a href="#重要的事情放在最后面，路由管理一般使用第三方库-FLURO" class="headerlink" title="重要的事情放在最后面，路由管理一般使用第三方库 FLURO"></a>重要的事情放在最后面，路由管理一般使用第三方库 <code>FLURO</code></h2><p><a href="https://github.com/theyakka/fluro" target="_blank" rel="noopener">FLURO</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Navigator提供了操作-Routes-的两种方法：-Navigator-push-和-Navigator-pop。&quot;&gt;&lt;a href=&quot;#Navigator提供了操作-Routes-的两种方法：-Navigator-push-和-Navigator-pop。
      
    
    </summary>
    
      <category term="App" scheme="https://18600917746.github.io/categories/App/"/>
    
      <category term="Flutter" scheme="https://18600917746.github.io/categories/App/Flutter/"/>
    
      <category term="Routes" scheme="https://18600917746.github.io/categories/App/Flutter/Routes/"/>
    
    
      <category term="App" scheme="https://18600917746.github.io/tags/App/"/>
    
      <category term="Flutter" scheme="https://18600917746.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>hello-flutter-icon</title>
    <link href="https://18600917746.github.io/2019/05/24/hello-flutter-icon/"/>
    <id>https://18600917746.github.io/2019/05/24/hello-flutter-icon/</id>
    <published>2019-05-24T08:12:51.000Z</published>
    <updated>2019-05-24T08:14:32.125Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第三方-icon-使用"><a href="#第三方-icon-使用" class="headerlink" title="第三方 icon 使用"></a>第三方 <code>icon</code> 使用</h2><p><a href="http://fluttericon.com/" target="_blank" rel="noopener">fluttericon</a></p><h3 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第三方-icon-使用&quot;&gt;&lt;a href=&quot;#第三方-icon-使用&quot; class=&quot;headerlink&quot; title=&quot;第三方 icon 使用&quot;&gt;&lt;/a&gt;第三方 &lt;code&gt;icon&lt;/code&gt; 使用&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://flutt
      
    
    </summary>
    
      <category term="App" scheme="https://18600917746.github.io/categories/App/"/>
    
      <category term="Flutter" scheme="https://18600917746.github.io/categories/App/Flutter/"/>
    
      <category term="Icon" scheme="https://18600917746.github.io/categories/App/Flutter/Icon/"/>
    
    
      <category term="App" scheme="https://18600917746.github.io/tags/App/"/>
    
      <category term="Flutter" scheme="https://18600917746.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>hello-小程序</title>
    <link href="https://18600917746.github.io/2019/05/23/hello-%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <id>https://18600917746.github.io/2019/05/23/hello-小程序/</id>
    <published>2019-05-23T07:35:43.000Z</published>
    <updated>2019-05-23T09:12:23.753Z</updated>
    
    <content type="html"><![CDATA[<h3 id="原生走一波"><a href="#原生走一波" class="headerlink" title="原生走一波"></a>原生走一波</h3><blockquote><ol><li>安装开发工具</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><ol start="2"><li>【测试号】创建项目</li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;原生走一波&quot;&gt;&lt;a href=&quot;#原生走一波&quot; class=&quot;headerlink&quot; title=&quot;原生走一波&quot;&gt;&lt;/a&gt;原生走一波&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;安装开发工具&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;figure
      
    
    </summary>
    
      <category term="小程序" scheme="https://18600917746.github.io/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="原生" scheme="https://18600917746.github.io/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E5%8E%9F%E7%94%9F/"/>
    
    
      <category term="小程序" scheme="https://18600917746.github.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>hello-axios</title>
    <link href="https://18600917746.github.io/2019/05/20/hello-axios/"/>
    <id>https://18600917746.github.io/2019/05/20/hello-axios/</id>
    <published>2019-05-20T02:50:45.000Z</published>
    <updated>2019-05-23T07:41:17.811Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、axios-发-post-请求，后端接收不到参数的解决方案"><a href="#1、axios-发-post-请求，后端接收不到参数的解决方案" class="headerlink" title="1、axios 发 post 请求，后端接收不到参数的解决方案"></a>1、axios 发 post 请求，后端接收不到参数的解决方案</h3><h3 id="2、接收二进制数据"><a href="#2、接收二进制数据" class="headerlink" title="2、接收二进制数据"></a>2、接收二进制数据</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1、axios-发-post-请求，后端接收不到参数的解决方案&quot;&gt;&lt;a href=&quot;#1、axios-发-post-请求，后端接收不到参数的解决方案&quot; class=&quot;headerlink&quot; title=&quot;1、axios 发 post 请求，后端接收不到参数的解决方
      
    
    </summary>
    
      <category term="Axios" scheme="https://18600917746.github.io/categories/Axios/"/>
    
    
      <category term="Ajax" scheme="https://18600917746.github.io/tags/Ajax/"/>
    
      <category term="Axios" scheme="https://18600917746.github.io/tags/Axios/"/>
    
  </entry>
  
  <entry>
    <title>hello-cordova-platforms</title>
    <link href="https://18600917746.github.io/2019/05/16/hello-cordova-platforms/"/>
    <id>https://18600917746.github.io/2019/05/16/hello-cordova-platforms/</id>
    <published>2019-05-16T03:18:11.000Z</published>
    <updated>2019-05-16T03:38:30.470Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看本机可安装的平台"><a href="#查看本机可安装的平台" class="headerlink" title="查看本机可安装的平台"></a>查看本机可安装的平台</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova platforms list</span><br></pre></td></tr></table></figure><h3 id="查看安装平台的先决条件"><a href="#查看安装平台的先决条件" class="headerlink" title="查看安装平台的先决条件"></a>查看安装平台的先决条件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova requirements</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;查看本机可安装的平台&quot;&gt;&lt;a href=&quot;#查看本机可安装的平台&quot; class=&quot;headerlink&quot; title=&quot;查看本机可安装的平台&quot;&gt;&lt;/a&gt;查看本机可安装的平台&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
      <category term="App" scheme="https://18600917746.github.io/categories/App/"/>
    
      <category term="Cordova" scheme="https://18600917746.github.io/categories/App/Cordova/"/>
    
      <category term="Platforms" scheme="https://18600917746.github.io/categories/App/Cordova/Platforms/"/>
    
    
      <category term="App" scheme="https://18600917746.github.io/tags/App/"/>
    
      <category term="Cordova" scheme="https://18600917746.github.io/tags/Cordova/"/>
    
  </entry>
  
  <entry>
    <title>hello-cordova-plugin</title>
    <link href="https://18600917746.github.io/2019/05/16/hello-cordova-plugin/"/>
    <id>https://18600917746.github.io/2019/05/16/hello-cordova-plugin/</id>
    <published>2019-05-16T01:39:31.000Z</published>
    <updated>2019-05-16T07:04:58.549Z</updated>
    
    <content type="html"><![CDATA[<h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><blockquote><p>cordova-plugin-splashscreen  启动图+app图标</p></blockquote><ul><li><p>安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin add cordova-plugin-splashscreen</span><br></pre></td></tr></table></figure></li><li><p>基本配置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">platform</span> <span class="attr">name</span>=<span class="string">"android"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">density</span>=<span class="string">"ldpi"</span> <span class="attr">src</span>=<span class="string">"res/icon/android/drawable-ldpi/icon.png"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">density</span>=<span class="string">"mdpi"</span> <span class="attr">src</span>=<span class="string">"res/icon/android/drawable-mdpi/icon.png"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">density</span>=<span class="string">"hdpi"</span> <span class="attr">src</span>=<span class="string">"res/icon/android/drawable-hdpi/icon.png"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">density</span>=<span class="string">"xhdpi"</span> <span class="attr">src</span>=<span class="string">"res/icon/android/drawable-xhdpi/icon.png"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">density</span>=<span class="string">"xxhdpi"</span> <span class="attr">src</span>=<span class="string">"res/icon/android/drawable-xxhdpi/icon.png"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 以下是欢迎页面，可根据需要进行添加 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">"land-hdpi"</span> <span class="attr">src</span>=<span class="string">"res/screen/android/splash-land-hdpi.png"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">"land-ldpi"</span> <span class="attr">src</span>=<span class="string">"res/screen/android/splash-land-ldpi.png"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">"land-mdpi"</span> <span class="attr">src</span>=<span class="string">"res/screen/android/splash-land-mdpi.png"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">"land-xhdpi"</span> <span class="attr">src</span>=<span class="string">"res/screen/android/splash-land-xhdpi.png"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">"port-hdpi"</span> <span class="attr">src</span>=<span class="string">"res/screen/android/splash-port-hdpi.png"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">"port-ldpi"</span> <span class="attr">src</span>=<span class="string">"res/screen/android/splash-port-ldpi.png"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">"port-mdpi"</span> <span class="attr">src</span>=<span class="string">"res/screen/android/splash-port-mdpi.png"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">"port-xhdpi"</span> <span class="attr">src</span>=<span class="string">"res/screen/android/splash-port-xhdpi.png"</span> /&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">platform</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">platform</span> <span class="attr">name</span>=<span class="string">"ios"</span>&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iOS 8.0+ --&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iPhone 6 Plus  --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-60@3x.png"</span> <span class="attr">width</span>=<span class="string">"180"</span> <span class="attr">height</span>=<span class="string">"180"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iOS 7.0+ --&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iPhone / iPod Touch  --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-60.png"</span> <span class="attr">width</span>=<span class="string">"60"</span> <span class="attr">height</span>=<span class="string">"60"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-60@2x.png"</span> <span class="attr">width</span>=<span class="string">"120"</span> <span class="attr">height</span>=<span class="string">"120"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iPad --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-76.png"</span> <span class="attr">width</span>=<span class="string">"76"</span> <span class="attr">height</span>=<span class="string">"76"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-76@2x.png"</span> <span class="attr">width</span>=<span class="string">"152"</span> <span class="attr">height</span>=<span class="string">"152"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iOS 6.1 --&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- Spotlight Icon --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-40.png"</span> <span class="attr">width</span>=<span class="string">"40"</span> <span class="attr">height</span>=<span class="string">"40"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-40@2x.png"</span> <span class="attr">width</span>=<span class="string">"80"</span> <span class="attr">height</span>=<span class="string">"80"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iPhone / iPod Touch --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon.png"</span> <span class="attr">width</span>=<span class="string">"57"</span> <span class="attr">height</span>=<span class="string">"57"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon@2x.png"</span> <span class="attr">width</span>=<span class="string">"114"</span> <span class="attr">height</span>=<span class="string">"114"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iPad --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-72.png"</span> <span class="attr">width</span>=<span class="string">"72"</span> <span class="attr">height</span>=<span class="string">"72"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-72@2x.png"</span> <span class="attr">width</span>=<span class="string">"144"</span> <span class="attr">height</span>=<span class="string">"144"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iPhone Spotlight and Settings Icon --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-small.png"</span> <span class="attr">width</span>=<span class="string">"29"</span> <span class="attr">height</span>=<span class="string">"29"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-small@2x.png"</span> <span class="attr">width</span>=<span class="string">"58"</span> <span class="attr">height</span>=<span class="string">"58"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iPad Spotlight and Settings Icon --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-50.png"</span> <span class="attr">width</span>=<span class="string">"50"</span> <span class="attr">height</span>=<span class="string">"50"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-50@2x.png"</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"100"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- 以下是欢迎页面，可根据需要进行添加 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default~iphone.png"</span> <span class="attr">width</span>=<span class="string">"320"</span> <span class="attr">height</span>=<span class="string">"480"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default@2x~iphone.png"</span> <span class="attr">width</span>=<span class="string">"640"</span> <span class="attr">height</span>=<span class="string">"960"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default-Portrait~ipad.png"</span> <span class="attr">width</span>=<span class="string">"768"</span> <span class="attr">height</span>=<span class="string">"1024"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default-Portrait@2x~ipad.png"</span> <span class="attr">width</span>=<span class="string">"1536"</span> <span class="attr">height</span>=<span class="string">"2048"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default-Landscape~ipad.png"</span> <span class="attr">width</span>=<span class="string">"1024"</span> <span class="attr">height</span>=<span class="string">"768"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default-Landscape@2x~ipad.png"</span> <span class="attr">width</span>=<span class="string">"2048"</span> <span class="attr">height</span>=<span class="string">"1536"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default-568h@2x~iphone.png"</span> <span class="attr">width</span>=<span class="string">"640"</span> <span class="attr">height</span>=<span class="string">"1136"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default-667h.png"</span> <span class="attr">width</span>=<span class="string">"750"</span> <span class="attr">height</span>=<span class="string">"1334"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default-736h.png"</span> <span class="attr">width</span>=<span class="string">"1242"</span> <span class="attr">height</span>=<span class="string">"2208"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default-Landscape-736h.png"</span> <span class="attr">width</span>=<span class="string">"2208"</span> <span class="attr">height</span>=<span class="string">"1242"</span>/&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">platform</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>其他配置</p><ul><li><p>自动隐藏启动页面AutoHideSplashScreen（默认为：true）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">preference</span> <span class="attr">name</span>=<span class="string">"AutoHideSplashScreen"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>显示启动页面的时间长度SplashScreenDelay(默认为：3000)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">preference</span> <span class="attr">name</span>=<span class="string">"SplashScreenDelay"</span> <span class="attr">value</span>=<span class="string">"3000"</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>若想禁用启动页面，可设置为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">preference</span> <span class="attr">name</span>=<span class="string">"SplashScreenDelay"</span> <span class="attr">value</span>=<span class="string">"0"</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>如果是iOS平台上想禁止启动页面，还需要添加：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">preference</span> <span class="attr">name</span>=<span class="string">"FadeSplashScreenDuration"</span> <span class="attr">value</span>=<span class="string">"0"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>启动页面淡入淡出的效果</p><ul><li><p>是否显示淡入淡出效果FadeSplashScreen(默认为：true)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">preference</span> <span class="attr">name</span>=<span class="string">"FadeSplashScreen"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>淡入淡出效果的执行时间长度FadeSplashScreenDuration(默认为：500)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">preference</span> <span class="attr">name</span>=<span class="string">"FadeSplashScreenDuration"</span> <span class="attr">value</span>=<span class="string">"750"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>启动页面是否允许旋转（默认为：true）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">preference</span> <span class="attr">name</span>=<span class="string">"ShowSplashScreenSpinner"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>插件还可以通过js代码调用，提供有以下两个方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">navigator.splashscreen.hide();<span class="comment">//隐藏启动页面</span></span><br><span class="line"> </span><br><span class="line">navigator.splashscreen.show();<span class="comment">//显示启动页面</span></span><br></pre></td></tr></table></figure></li><li><p>图标文件夹内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">projectRoot</span><br><span class="line">    hooks</span><br><span class="line">    platforms</span><br><span class="line">    plugins</span><br><span class="line">    www</span><br><span class="line">        css</span><br><span class="line">        img</span><br><span class="line">        js</span><br><span class="line">    res</span><br><span class="line">        screen</span><br><span class="line">            android</span><br><span class="line">            ios</span><br><span class="line">        icon</span><br><span class="line">            android</span><br><span class="line">            ios</span><br></pre></td></tr></table></figure></li><li><p>安卓</p><ul><li><p>安卓图标具体规格如下（存放目录：res/icon/android/）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">36*36    drawable-ldpi/icon.png</span><br><span class="line">48*48    drawable-mdpi/icon.png</span><br><span class="line">72*72    drawable-hdpi/icon.png</span><br><span class="line">96*96    drawable-xhdpi/icon.png</span><br><span class="line">144*144  drawable-xxhdpi/icon.png</span><br></pre></td></tr></table></figure></li><li><p>iOS图标具体规格如下（存放目录：res/icon/ios/）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">57*57   icon.png</span><br><span class="line">114*114 icon@2x.png</span><br><span class="line">29*29   icon-small.png</span><br><span class="line">58*58   icon-small@2x.png</span><br><span class="line">40*40   icon-40.png</span><br><span class="line">80*80   icon-40@2x.png</span><br><span class="line">50*50   icon-50.png</span><br><span class="line">100*100 icon-50@2x.png</span><br><span class="line">60*60   icon-60.png</span><br><span class="line">120*120 icon-60@2x.png</span><br><span class="line">180*180 icon-60@3x.png</span><br><span class="line">72*72   icon-72.png</span><br><span class="line">144*144 icon-72@2x.png</span><br><span class="line">76*76   icon-76.png</span><br><span class="line">152*152 icon-76@2x.png</span><br></pre></td></tr></table></figure></li></ul></li><li><p>ios</p><ul><li><p>ios图标具体规格如下（存放目录：res/icon/ios/）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">960*720 splash-land-xhdpi.png</span><br><span class="line">640*480 splash-land-hdpi.png</span><br><span class="line">470*320 splash-land-mdpi.png</span><br><span class="line">426*320 splash-land-ldpi.png</span><br><span class="line">720*960 splash-port-xhdpi.png</span><br><span class="line">480*640 splash-port-hdpi.png</span><br><span class="line">320*470 splash-port-mdpi.png</span><br><span class="line">320*426 splash-port-ldpi.png</span><br></pre></td></tr></table></figure></li><li><p>iOS启动画面具体规格如下（存放目录：res/screen/ios/）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">320*480     Default~iphone.png</span><br><span class="line">640*960     Default@2x~iphone.png</span><br><span class="line">768*1024    Default-Portrait~ipad.png</span><br><span class="line">1536*2048   Default-Portrait@2x~ipad.png</span><br><span class="line">1024*768    Default-Landscape~ipad.png</span><br><span class="line">2048*1536   Default-Landscape@2x~ipad.png</span><br><span class="line">640*1136    Default-568h@2x~iphone.png</span><br><span class="line">750*1334    Default-667h.png</span><br><span class="line">1242*2208   Default-736h.png</span><br><span class="line">2208*1242   Default-Landscape-736h.png</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><blockquote><p>cordova-plugin-crosswalk-webview  webview</p></blockquote><ul><li>安装插件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin add cordova-plugin-crosswalk-webview</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>phonegap-plugin-barcodescanner  二维码扫描 </p></blockquote><ul><li>安装插件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin add phonegap-plugin-barcodescanner</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;插件&quot;&gt;&lt;a href=&quot;#插件&quot; class=&quot;headerlink&quot; title=&quot;插件&quot;&gt;&lt;/a&gt;插件&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;cordova-plugin-splashscreen  启动图+app图标&lt;/p&gt;
&lt;/blockquote&gt;

      
    
    </summary>
    
      <category term="App" scheme="https://18600917746.github.io/categories/App/"/>
    
      <category term="Cordova" scheme="https://18600917746.github.io/categories/App/Cordova/"/>
    
      <category term="Plugin" scheme="https://18600917746.github.io/categories/App/Cordova/Plugin/"/>
    
    
      <category term="App" scheme="https://18600917746.github.io/tags/App/"/>
    
      <category term="Cordova" scheme="https://18600917746.github.io/tags/Cordova/"/>
    
  </entry>
  
  <entry>
    <title>搭建svn与git服务器</title>
    <link href="https://18600917746.github.io/2019/04/17/%E6%90%AD%E5%BB%BAsvn%E4%B8%8Egit%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://18600917746.github.io/2019/04/17/搭建svn与git服务器/</id>
    <published>2019-04-17T13:17:37.000Z</published>
    <updated>2019-04-17T14:16:40.871Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装-Svn"><a href="#安装-Svn" class="headerlink" title="安装 Svn"></a>安装 Svn</h3><ul><li>安装 svn 管理工具</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install subversion</span><br></pre></td></tr></table></figure><ul><li>创建一个文件夹作为 svn 代码仓库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir svn</span><br></pre></td></tr></table></figure><ul><li>1、初始化仓库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svnadmin create test1</span><br></pre></td></tr></table></figure><ul><li>2、创建用户密码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi test1/conf/passwd</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nsername=password</span><br></pre></td></tr></table></figure><ul><li>3、修改 svn 服务文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi test1/conf/svnserve.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 是否允许匿名访问</span><br><span class="line">anon-access = none</span><br><span class="line">// 授权以后是否可以读写</span><br><span class="line">auth-access = write</span><br><span class="line">// </span><br><span class="line">password-db = passwd</span><br><span class="line">// 开启可能出错</span><br><span class="line">authz = authz</span><br></pre></td></tr></table></figure><ul><li>4、启动 svn 服务器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 检测是否已经开启</span><br><span class="line">ps -ef | greep  svn</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svnserve -d -r 仓库地址</span><br></pre></td></tr></table></figure><h3 id="git-服务器安装"><a href="#git-服务器安装" class="headerlink" title="git 服务器安装"></a>git 服务器安装</h3><ul><li>安装 git 管理工具</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git -y</span><br></pre></td></tr></table></figure><ul><li>创建一个文件夹作为 git 代码仓库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir git</span><br><span class="line">cd git/</span><br></pre></td></tr></table></figure><ul><li>1、初始化仓库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init -- bare test.get</span><br></pre></td></tr></table></figure><ul><li>2、添加一个系统用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd cheng</span><br></pre></td></tr></table></figure><ul><li>3、创建用户名密码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd cheng</span><br></pre></td></tr></table></figure><ul><li>4、修改目录的所有者</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R  xxx:xxx test.get</span><br></pre></td></tr></table></figure><ul><li>5、本地使用</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装-Svn&quot;&gt;&lt;a href=&quot;#安装-Svn&quot; class=&quot;headerlink&quot; title=&quot;安装 Svn&quot;&gt;&lt;/a&gt;安装 Svn&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;安装 svn 管理工具&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight 
      
    
    </summary>
    
      <category term="茶余饭后" scheme="https://18600917746.github.io/categories/%E8%8C%B6%E4%BD%99%E9%A5%AD%E5%90%8E/"/>
    
      <category term="jsCode" scheme="https://18600917746.github.io/categories/%E8%8C%B6%E4%BD%99%E9%A5%AD%E5%90%8E/jsCode/"/>
    
    
      <category term="Git 服务器" scheme="https://18600917746.github.io/tags/Git-%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Svn 服务器" scheme="https://18600917746.github.io/tags/Svn-%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>ie低版本浏览器不兼容提示</title>
    <link href="https://18600917746.github.io/2019/04/17/ie%E4%BD%8E%E7%89%88%E6%9C%AC%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8D%E5%85%BC%E5%AE%B9%E6%8F%90%E7%A4%BA/"/>
    <id>https://18600917746.github.io/2019/04/17/ie低版本浏览器不兼容提示/</id>
    <published>2019-04-17T12:46:32.000Z</published>
    <updated>2019-04-17T12:48:03.937Z</updated>
    
    <content type="html"><![CDATA[<h3 id="上代码"><a href="#上代码" class="headerlink" title="上代码"></a>上代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ua = navigator.userAgent.toLowerCase();</span><br><span class="line">    <span class="keyword">var</span> isIE = ua.indexOf(<span class="string">"msie"</span>);</span><br><span class="line">    <span class="keyword">if</span> (isIE &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span>(ua.indexOf(<span class="string">"msie 8.0"</span>) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>).style.display=<span class="string">"none"</span>;</span><br><span class="line">          <span class="built_in">document</span>.write(<span class="string">'&lt;div style="width: 600px;margin:300px auto"&gt;&lt;img style="width: 100%" src="https://img.kaikeba.com/up_chrome.png" alt="img" /&gt;&lt;/div&gt;'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="keyword">if</span>(ua.indexOf(<span class="string">"msie 7.0"</span>) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>).style.display=<span class="string">"none"</span>;</span><br><span class="line">          <span class="built_in">document</span>.write(<span class="string">'&lt;div style="width: 600px;margin:300px auto"&gt;&lt;img style="width: 100%" src="https://img.kaikeba.com/up_chrome.png" alt="img" /&gt;&lt;/div&gt;'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;上代码&quot;&gt;&lt;a href=&quot;#上代码&quot; class=&quot;headerlink&quot; title=&quot;上代码&quot;&gt;&lt;/a&gt;上代码&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
      
    
    </summary>
    
      <category term="茶余饭后" scheme="https://18600917746.github.io/categories/%E8%8C%B6%E4%BD%99%E9%A5%AD%E5%90%8E/"/>
    
      <category term="jsCode" scheme="https://18600917746.github.io/categories/%E8%8C%B6%E4%BD%99%E9%A5%AD%E5%90%8E/jsCode/"/>
    
    
      <category term="jsCode" scheme="https://18600917746.github.io/tags/jsCode/"/>
    
  </entry>
  
  <entry>
    <title>hello-hash</title>
    <link href="https://18600917746.github.io/2019/04/14/hello-hash/"/>
    <id>https://18600917746.github.io/2019/04/14/hello-hash/</id>
    <published>2019-04-14T13:20:52.000Z</published>
    <updated>2019-04-14T13:34:40.111Z</updated>
    
    <content type="html"><![CDATA[<h3 id="hash的定义"><a href="#hash的定义" class="headerlink" title="hash的定义"></a>hash的定义</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.baidu.com#test=123</span><br></pre></td></tr></table></figure><ul><li>hash 属性是一个可读可写的字符串，该字符串是 URL 的锚部分（从 # 号开始的部分）</li></ul><h3 id="hash的使用"><a href="#hash的使用" class="headerlink" title="hash的使用"></a>hash的使用</h3><ul><li>大家对锚点都应该比较的熟悉，锚点一般是用来进行页面定位<ul><li>1、在页面添加location.hash可实现无论哪个页面跳到该页面都跳到固定位置。</li><li>2、如果是点击跳转到本页某位置，<a href="#锚点id"></a></li><li>3、如果是点击跳转到其它页某位置，<a href="lindex.html#锚点id"></a></li></ul></li><li><p>这里大家注意一下：</p><ul><li><p>hash只会在跳转到此页面的第一次起作用，再次刷新此页面将不起作用，而href始终起作用：</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location.href=<span class="string">"#navBar"</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> &gt;</span><span class="undefined">  </span></span><br><span class="line"><span class="javascript">          location.hash=<span class="string">"#navBar"</span>;  </span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"navBar"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;hash的定义&quot;&gt;&lt;a href=&quot;#hash的定义&quot; class=&quot;headerlink&quot; title=&quot;hash的定义&quot;&gt;&lt;/a&gt;hash的定义&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
      <category term="前端" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="hello" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/hello/"/>
    
    
      <category term="Hash" scheme="https://18600917746.github.io/tags/Hash/"/>
    
  </entry>
  
  <entry>
    <title>vue-Vuex</title>
    <link href="https://18600917746.github.io/2019/04/01/vue-Vuex/"/>
    <id>https://18600917746.github.io/2019/04/01/vue-Vuex/</id>
    <published>2019-04-01T08:24:04.000Z</published>
    <updated>2019-04-01T10:15:12.920Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是-Vuex"><a href="#什么是-Vuex" class="headerlink" title="什么是 Vuex"></a>什么是 <code>Vuex</code></h3><h3 id="什么时候去使用-Vuex"><a href="#什么时候去使用-Vuex" class="headerlink" title="什么时候去使用 Vuex"></a>什么时候去使用 <code>Vuex</code></h3><h3 id="解析-Vuex-的四大法宝"><a href="#解析-Vuex-的四大法宝" class="headerlink" title="解析 Vuex 的四大法宝"></a>解析 <code>Vuex</code> 的四大法宝</h3><h4 id="第一-state"><a href="#第一-state" class="headerlink" title="第一 state"></a>第一 <code>state</code></h4><ul><li><code>state</code> 是状态对象，对于公用数据的管理</li><li><code>mapState</code> 辅助函数<ul><li>定义在 <code>computed</code> 中使用 </li><li>映射 <code>this.const = store.state.const</code></li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    computed: &#123;</span><br><span class="line">      <span class="comment">// 使用对象展开运算符将此对象混入到外部对象中</span></span><br><span class="line">      ...mapState(&#123;</span><br><span class="line">      <span class="keyword">const</span>:<span class="function">(<span class="params">state</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> state.const</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 一般情况下只做取值操作，如果要对数据做计算一般使用 getter</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    computed: &#123;</span><br><span class="line">      <span class="comment">// 使用对象展开运算符将此对象混入到外部对象中</span></span><br><span class="line">      ...mapState([<span class="string">'const'</span>])</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第二-getter-store-的计算属性"><a href="#第二-getter-store-的计算属性" class="headerlink" title="第二 getter store 的计算属性"></a>第二 <code>getter</code> store 的计算属性</h4><ul><li><code>mapGetter</code> 辅助函数<ul><li>定义在 <code>computed</code> 中使用 </li><li>数据会进行缓存</li><li>数据读取前进行处理计算</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  computed: &#123;</span><br><span class="line">  <span class="comment">// 使用对象展开运算符将 getter 混入 computed 对象中</span></span><br><span class="line">    ...mapGetters([</span><br><span class="line">      <span class="string">'doneTodosCount'</span>,</span><br><span class="line">      <span class="string">'anotherGetter'</span>,</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">    ])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第三-Mutation-同步触发转态"><a href="#第三-Mutation-同步触发转态" class="headerlink" title="第三 Mutation 同步触发转态"></a>第三 <code>Mutation</code> 同步触发转态</h4><ul><li><code>Mutation</code> 是状态的触发者 <ul><li>定义在 <code>methods</code> 中使用 </li><li><code>Mutation</code> 必须是同步函数</li><li>参数一般使用 解构赋值</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    count: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    increment (state) &#123;</span><br><span class="line">      state.count++</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>commit 参数一般传递一个 对象</li><li>commit 可以使用 type 来指定触发的 函数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用 commit 进行触发 Mutation</span></span><br><span class="line">store.commit(<span class="string">'increment'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以 `带参数` 形式分发</span></span><br><span class="line">store.commit(<span class="string">'incrementAsync'</span>, &#123;</span><br><span class="line">  amount: <span class="number">10</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以对象形式分发</span></span><br><span class="line">store.commit(&#123;</span><br><span class="line">  type:<span class="string">'incrementAsync'</span>,</span><br><span class="line">  amount: <span class="number">10</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>mapActions 辅助函数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mapMutations &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  methods: &#123;</span><br><span class="line">    ...mapMutations([</span><br><span class="line">      <span class="string">'increment'</span>, <span class="comment">// 将 `this.increment()` 映射为 `this.$store.commit('increment')`</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// `mapMutations` 也支持载荷：</span></span><br><span class="line">      <span class="string">'incrementBy'</span> <span class="comment">// 将 `this.incrementBy(amount)` 映射为 `this.$store.commit('incrementBy', amount)`</span></span><br><span class="line">    ]),</span><br><span class="line">    ...mapMutations(&#123;</span><br><span class="line">      add: <span class="string">'increment'</span> <span class="comment">// 将 `this.add()` 映射为 `this.$store.commit('increment')`</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第四-Action-异步触发转态"><a href="#第四-Action-异步触发转态" class="headerlink" title="第四 Action 异步触发转态"></a>第四 <code>Action</code> 异步触发转态</h3><ul><li>Action 提交的是 <code>mutation</code>，而不是直接变更状态。<ul><li>定义在 <code>methods</code> 中使用 </li><li>Action 可以包含任意 <code>异步操作</code></li><li>参数一般使用 解构赋值</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  actions: &#123;</span><br><span class="line">    increment (context) &#123;</span><br><span class="line">      context.commit(<span class="string">'increment'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  actions: &#123;</span><br><span class="line">    increment (&#123;state,commit&#125;) &#123;</span><br><span class="line">      commit(<span class="string">'increment'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>dispatch 参数一般传递一个 对象</li><li>dispatch 可以使用 type 来指定触发的 函数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用 dispatch 进行触发 actions</span></span><br><span class="line">store.dispatch(<span class="string">'incrementAsync'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以 `带参数` 形式分发</span></span><br><span class="line">store.dispatch(<span class="string">'incrementAsync'</span>, &#123;</span><br><span class="line">  amount: <span class="number">10</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以对象形式分发</span></span><br><span class="line">store.dispatch(&#123;</span><br><span class="line">  type: <span class="string">'incrementAsync'</span>,</span><br><span class="line">  amount: <span class="number">10</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>mapActions 辅助函数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mapActions &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  methods: &#123;</span><br><span class="line">    ...mapActions([</span><br><span class="line">      <span class="string">'increment'</span>, <span class="comment">// 将 `this.increment()` 映射为 `this.$store.dispatch('increment')`</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// `mapActions` 也支持载荷：</span></span><br><span class="line">      <span class="string">'incrementBy'</span> <span class="comment">// 将 `this.incrementBy(amount)` 映射为 `this.$store.dispatch('incrementBy', amount)`</span></span><br><span class="line">    ]),</span><br><span class="line">    ...mapActions(&#123;</span><br><span class="line">      add: <span class="string">'increment'</span> <span class="comment">// 将 `this.add()` 映射为 `this.$store.dispatch('increment')`</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;什么是-Vuex&quot;&gt;&lt;a href=&quot;#什么是-Vuex&quot; class=&quot;headerlink&quot; title=&quot;什么是 Vuex&quot;&gt;&lt;/a&gt;什么是 &lt;code&gt;Vuex&lt;/code&gt;&lt;/h3&gt;&lt;h3 id=&quot;什么时候去使用-Vuex&quot;&gt;&lt;a href=&quot;#什么时候
      
    
    </summary>
    
      <category term="前端" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="vue" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/vue/"/>
    
    
      <category term="Vuex" scheme="https://18600917746.github.io/tags/Vuex/"/>
    
  </entry>
  
  <entry>
    <title>hello-ES6</title>
    <link href="https://18600917746.github.io/2019/03/31/hello-ES6/"/>
    <id>https://18600917746.github.io/2019/03/31/hello-ES6/</id>
    <published>2019-03-31T04:18:48.000Z</published>
    <updated>2019-03-31T04:19:42.118Z</updated>
    
    <content type="html"><![CDATA[<p>### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;### &lt;/p&gt;

      
    
    </summary>
    
      <category term="前端" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="hello" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/hello/"/>
    
    
      <category term="ES6" scheme="https://18600917746.github.io/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>hello-webScoket</title>
    <link href="https://18600917746.github.io/2019/03/31/hello-webScoket/"/>
    <id>https://18600917746.github.io/2019/03/31/hello-webScoket/</id>
    <published>2019-03-31T03:19:02.000Z</published>
    <updated>2019-03-31T04:17:11.707Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用-scoket-io-实现通讯"><a href="#使用-scoket-io-实现通讯" class="headerlink" title="使用 scoket.io 实现通讯"></a>使用 <code>scoket.io</code> 实现通讯</h3><ul><li>前端</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://localhost:8080/socket.io/socket.io.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> sokt = io.connect(<span class="string">'ws://localhost:8080'</span>);</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 发送数据</span></span></span><br><span class="line"><span class="javascript">      sokt.emit(<span class="string">'message'</span>, <span class="number">12</span>, <span class="number">5</span>);</span></span><br><span class="line"><span class="javascript">      sokt.on(<span class="string">'message'</span>, (res) =&gt; &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(res);</span></span><br><span class="line"><span class="undefined">      &#125;);</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>node 服务端</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">const</span> io = <span class="built_in">require</span>(<span class="string">'scoket.io'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> httpServer = http.createServer(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;&#125;);</span><br><span class="line"></span><br><span class="line">httpServer.listen(<span class="number">8080</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> wsServer = io.listen(httpServer);</span><br><span class="line">wsServer.on(<span class="string">'connection'</span>, (cokt) =&gt; &#123;</span><br><span class="line">  cokt.emit(<span class="string">'message'</span>, <span class="string">'数据'</span>);</span><br><span class="line">  cokt.on(<span class="string">'message'</span>, (a, b) =&gt; &#123;</span><br><span class="line">    cokt.emit(<span class="string">'message'</span>, a, b, a + b);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="使用原生的-webScoket"><a href="#使用原生的-webScoket" class="headerlink" title="使用原生的 webScoket"></a>使用原生的 <code>webScoket</code></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">太麻烦，不建议使用</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;使用-scoket-io-实现通讯&quot;&gt;&lt;a href=&quot;#使用-scoket-io-实现通讯&quot; class=&quot;headerlink&quot; title=&quot;使用 scoket.io 实现通讯&quot;&gt;&lt;/a&gt;使用 &lt;code&gt;scoket.io&lt;/code&gt; 实现通讯&lt;/h3&gt;
      
    
    </summary>
    
      <category term="前端" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="hello" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/hello/"/>
    
    
      <category term="webScoket" scheme="https://18600917746.github.io/tags/webScoket/"/>
    
  </entry>
  
  <entry>
    <title>hello-formData</title>
    <link href="https://18600917746.github.io/2019/03/31/hello-formData/"/>
    <id>https://18600917746.github.io/2019/03/31/hello-formData/</id>
    <published>2019-03-31T02:17:59.000Z</published>
    <updated>2019-03-31T02:34:04.075Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是-formData"><a href="#什么是-formData" class="headerlink" title="什么是 formData"></a>什么是 <code>formData</code></h3><h3 id="表单-提交"><a href="#表单-提交" class="headerlink" title="表单 提交"></a>表单 提交</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">dir</span>=<span class="string">"ltr"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form1"</span> <span class="attr">action</span>=<span class="string">"http://localhost:8080/"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">      用户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pass"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"f1"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">let</span> oForm=<span class="built_in">document</span>.querySelector(<span class="string">'#form1'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">  oForm.onsubmit=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> formdata=<span class="keyword">new</span> FormData(oForm);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> xhr=<span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    xhr.open(oForm.method, oForm.action, <span class="literal">true</span>);</span></span><br><span class="line"><span class="undefined">    xhr.send(formdata);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    xhr.onreadystatechange=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(xhr.readyState==<span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(xhr.status==<span class="number">200</span>)&#123;</span></span><br><span class="line"><span class="javascript">          alert(<span class="string">'成功'</span>);</span></span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">          alert(<span class="string">'失败'</span>);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="undefined">  &#125;;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 服务端</span></span><br><span class="line"><span class="keyword">const</span> http=<span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">const</span> multiparty=<span class="built_in">require</span>(<span class="string">'multiparty'</span>);</span><br><span class="line"></span><br><span class="line">http.createServer(<span class="function">(<span class="params">req, res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> form=<span class="keyword">new</span> multiparty.Form(&#123;<span class="attr">uploadDir</span>: <span class="string">'./upload/'</span>&#125;);</span><br><span class="line"></span><br><span class="line">  form.parse(req);</span><br><span class="line"></span><br><span class="line">  form.on(<span class="string">'field'</span>, (name, value)=&gt;&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'field:'</span>, name, value);</span><br><span class="line">  &#125;);</span><br><span class="line">  form.on(<span class="string">'file'</span>, (name, file)=&gt;&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'file:'</span>, name, file);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  form.on(<span class="string">'close'</span>, ()=&gt;&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'完事'</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;).listen(<span class="number">8080</span>);</span><br></pre></td></tr></table></figure><h3 id="ajax-提交"><a href="#ajax-提交" class="headerlink" title="ajax  提交"></a>ajax  提交</h3><ul><li>使用 <code>jquery</code> 一定要 设置 <code>processData: false</code>, <code>contentType: false</code> 禁止 <code>jquery</code> 进行数据转换</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">dir</span>=<span class="string">"ltr"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form1"</span> <span class="attr">action</span>=<span class="string">"http://localhost:8080/"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">      用户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pass"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"f1"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  $(<span class="string">'#form1'</span>).on(<span class="string">'submit'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> formdata=<span class="keyword">new</span> FormData(<span class="keyword">this</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">      url: <span class="keyword">this</span>.action,</span></span><br><span class="line"><span class="javascript">      type: <span class="keyword">this</span>.method,</span></span><br><span class="line"><span class="undefined">      data: formdata,</span></span><br><span class="line"><span class="javascript">      processData: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">      contentType: <span class="literal">false</span></span></span><br><span class="line"><span class="javascript">    &#125;).then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">      alert(<span class="string">'成功'</span>);</span></span><br><span class="line"><span class="undefined">    &#125;, res=&gt;&#123;</span></span><br><span class="line"><span class="javascript">      alert(<span class="string">'失败'</span>);</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="undefined">  &#125;);</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="自定义使用-formData-实现提交"><a href="#自定义使用-formData-实现提交" class="headerlink" title="自定义使用 formData 实现提交"></a>自定义使用 formData 实现提交</h3><ul><li>主要是 append 方法的使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">dir</span>=<span class="string">"ltr"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line">      用户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"user"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"pass"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"f1"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"btn1"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">let</span> oBtn=<span class="built_in">document</span>.querySelector(<span class="string">'#btn1'</span>);</span></span><br><span class="line"><span class="javascript">  oBtn.onclick=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> formdata=<span class="keyword">new</span> FormData();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    formdata.append(<span class="string">'username'</span>, <span class="built_in">document</span>.querySelector(<span class="string">'#user'</span>).value);</span></span><br><span class="line"><span class="javascript">    formdata.append(<span class="string">'password'</span>, <span class="built_in">document</span>.querySelector(<span class="string">'#pass'</span>).value);</span></span><br><span class="line"><span class="javascript">    formdata.append(<span class="string">'f1'</span>, <span class="built_in">document</span>.querySelector(<span class="string">'#f1'</span>).files[<span class="number">0</span>]);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> xhr=<span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    xhr.open(<span class="string">'post'</span>, <span class="string">'http://localhost:8080/'</span>, <span class="literal">true</span>);</span></span><br><span class="line"><span class="undefined">    xhr.send(formdata);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    xhr.onreadystatechange=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(xhr.readyState==<span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(xhr.status==<span class="number">200</span>)&#123;</span></span><br><span class="line"><span class="javascript">          alert(<span class="string">'成功'</span>);</span></span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">          alert(<span class="string">'失败'</span>);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined">  &#125;;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;什么是-formData&quot;&gt;&lt;a href=&quot;#什么是-formData&quot; class=&quot;headerlink&quot; title=&quot;什么是 formData&quot;&gt;&lt;/a&gt;什么是 &lt;code&gt;formData&lt;/code&gt;&lt;/h3&gt;&lt;h3 id=&quot;表单-提交&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="前端" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="hello" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/hello/"/>
    
    
      <category term="formData" scheme="https://18600917746.github.io/tags/formData/"/>
    
  </entry>
  
  <entry>
    <title>hello-fetch</title>
    <link href="https://18600917746.github.io/2019/03/31/hello-fetch/"/>
    <id>https://18600917746.github.io/2019/03/31/hello-fetch/</id>
    <published>2019-03-31T00:57:07.000Z</published>
    <updated>2019-04-06T01:49:32.046Z</updated>
    
    <content type="html"><![CDATA[<h3 id="fetch-是什么"><a href="#fetch-是什么" class="headerlink" title="fetch 是什么"></a>fetch 是什么</h3><h3 id="get-请求"><a href="#get-请求" class="headerlink" title="get 请求"></a><code>get</code> 请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> show = <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> res = <span class="keyword">await</span> fetch(<span class="string">'https://www.baidu.com/search/error.html?a=1&amp;b=2'</span>, &#123; <span class="comment">// 在URL中写上传递的参数</span></span><br><span class="line">    method: <span class="string">'GET'</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">let</span> text = <span class="keyword">await</span> res.text();</span><br><span class="line">  <span class="built_in">console</span>.log(text);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">show();</span><br></pre></td></tr></table></figure><h3 id="post-请求"><a href="#post-请求" class="headerlink" title="post 请求"></a><code>post</code> 请求</h3><ul><li>使用 <code>new URLSearchParams</code> 传递参数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> show = <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> res = <span class="keyword">await</span> fetch(<span class="string">'https://www.baidu.com/search/error.html'</span>, &#123; <span class="comment">// 在URL中写上传递的参数</span></span><br><span class="line">    method: <span class="string">'POST'</span>,</span><br><span class="line">    body: <span class="keyword">new</span> URLSearchParams([[<span class="string">'foo'</span>, <span class="number">1</span>], [<span class="string">'bar'</span>, <span class="number">2</span>], [<span class="string">'json'</span>, <span class="string">'cheng'</span>]]).toString(),</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">let</span> text = <span class="keyword">await</span> res.text();</span><br><span class="line">  <span class="built_in">console</span>.log(text);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">show();</span><br></pre></td></tr></table></figure><h3 id="设置请求的头信息"><a href="#设置请求的头信息" class="headerlink" title="设置请求的头信息"></a>设置请求的头信息</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> show = <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> res = <span class="keyword">await</span> fetch(<span class="string">'https://www.baidu.com/search/error.html'</span>, &#123; <span class="comment">// 在URL中写上传递的参数</span></span><br><span class="line">    method: <span class="string">'POST'</span>,</span><br><span class="line">    body: <span class="keyword">new</span> URLSearchParams([[<span class="string">'foo'</span>, <span class="number">1</span>], [<span class="string">'bar'</span>, <span class="number">2</span>], [<span class="string">'json'</span>, <span class="string">'cheng'</span>]]).toString(),</span><br><span class="line">    headers: <span class="keyword">new</span> Headers(&#123;</span><br><span class="line">      <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded'</span>, <span class="comment">// 指定提交方式为表单提交</span></span><br><span class="line">      <span class="string">'Accept'</span>: <span class="string">'text/plain'</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">let</span> text = <span class="keyword">await</span> res.text();</span><br><span class="line">  <span class="built_in">console</span>.log(text);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">show();</span><br></pre></td></tr></table></figure><h3 id="请求-json-数据"><a href="#请求-json-数据" class="headerlink" title="请求 json 数据"></a>请求 <code>json</code> 数据</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> show = <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> res = <span class="keyword">await</span> fetch(</span><br><span class="line">      <span class="string">'https://www.baidu.com/rec?platform=wise&amp;ms=1&amp;rset=rcmd&amp;word=123&amp;qid=11327900426705455986&amp;rq=123&amp;from=844b&amp;baiduid=A1D0B88941B30028C375C79CE5AC2E5E%3AFG%3D1&amp;tn=&amp;clientWidth=375&amp;t=1506826017369&amp;r=8255'</span>,</span><br><span class="line">      &#123; <span class="comment">// 在URL中写上传递的参数</span></span><br><span class="line">        method: <span class="string">'get'</span>,</span><br><span class="line">        headers: <span class="keyword">new</span> Headers(&#123;</span><br><span class="line">          <span class="string">'Accept'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">        &#125;),</span><br><span class="line">      &#125;);</span><br><span class="line">  <span class="keyword">let</span> json = <span class="keyword">await</span> res.json();</span><br><span class="line">  <span class="built_in">console</span>.log(json);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">show();</span><br></pre></td></tr></table></figure><h3 id="传递-form-数据"><a href="#传递-form-数据" class="headerlink" title="传递 form 数据"></a>传递 <code>form</code> 数据</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> form = <span class="keyword">new</span> FormData(<span class="built_in">document</span>.getElementById(<span class="string">'login-form'</span>));</span><br><span class="line"><span class="keyword">let</span> show = <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> res = <span class="keyword">await</span> fetch(</span><br><span class="line">      <span class="string">'https://www.baidu.com/rec?platform=wise&amp;ms=1&amp;rset=rcmd&amp;word=123&amp;qid=11327900426705455986&amp;rq=123&amp;from=844b&amp;baiduid=A1D0B88941B30028C375C79CE5AC2E5E%3AFG%3D1&amp;tn=&amp;clientWidth=375&amp;t=1506826017369&amp;r=8255'</span>,</span><br><span class="line">      &#123; <span class="comment">// 在URL中写上传递的参数</span></span><br><span class="line">        method: <span class="string">'POST'</span>,</span><br><span class="line">        body: form,</span><br><span class="line">      &#125;);</span><br><span class="line">  <span class="keyword">let</span> formData = <span class="keyword">await</span> res.formData();</span><br><span class="line">  <span class="built_in">console</span>.log(formData);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">show();</span><br></pre></td></tr></table></figure><h3 id="强制带-Cookie"><a href="#强制带-Cookie" class="headerlink" title="强制带 Cookie"></a>强制带 <code>Cookie</code></h3><ul><li>默认情况下, fetch 不会从服务端发送或接收任何 cookies, 如果站点依赖于维护一个用户会话，则导致未经认证的请求(要发送 cookies，必须发送凭据头).</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> show = <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> res = <span class="keyword">await</span> fetch(</span><br><span class="line">      <span class="string">'https://www.baidu.com/rec?platform=wise&amp;ms=1&amp;rset=rcmd&amp;word=123&amp;qid=11327900426705455986&amp;rq=123&amp;from=844b&amp;baiduid=A1D0B88941B30028C375C79CE5AC2E5E%3AFG%3D1&amp;tn=&amp;clientWidth=375&amp;t=1506826017369&amp;r=8255'</span>,</span><br><span class="line">      &#123; <span class="comment">// 在URL中写上传递的参数</span></span><br><span class="line">        method: <span class="string">'GET'</span>,</span><br><span class="line">        credentials: <span class="string">'include'</span>,</span><br><span class="line">        headers: <span class="keyword">new</span> Headers(&#123;</span><br><span class="line">          <span class="string">'Accept'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">        &#125;),</span><br><span class="line">      &#125;);</span><br><span class="line">  <span class="keyword">let</span> json = <span class="keyword">await</span> res.json();</span><br><span class="line">  <span class="built_in">console</span>.log(json);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">show();</span><br></pre></td></tr></table></figure><h3 id="fetch-封装"><a href="#fetch-封装" class="headerlink" title="fetch 封装"></a><code>fetch</code> 封装</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// api.js</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_fetch</span>(<span class="params">url, data, method = <span class="string">'GET'</span>,options=&#123;&#125;</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> body = o2s(data);</span><br><span class="line">    <span class="keyword">let</span> params = &#123;</span><br><span class="line">        method: method,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span> (method === <span class="string">'GET'</span>) &#123; <span class="comment">// 如果是GET请求，拼接url</span></span><br><span class="line">        url += <span class="string">'?'</span> + body;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         params.body=body</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(options.cookie!=<span class="literal">undefined</span>)&#123;</span><br><span class="line">        params.credentials=<span class="string">'include'</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(options.headers!=<span class="literal">undefined</span> &amp;&amp; <span class="keyword">typeof</span> options.headers==<span class="string">"object"</span>)&#123;</span><br><span class="line">        params.headers=<span class="keyword">new</span> Headers(options.headers);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        params.headers=<span class="keyword">new</span> Headers(&#123;</span><br><span class="line">            <span class="string">'Accept'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">            <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded'</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    fetch(url, params).then(<span class="function"><span class="params">r</span> =&gt;</span> options.dataType==<span class="string">"text"</span>?r.text():r.json()).then(<span class="function"><span class="params">r</span> =&gt;</span> r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">o2s</span>(<span class="params">obj, arr = [], idx = <span class="number">0</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        arr[idx++] = [item, obj[item]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> URLSearchParams(arr).toString();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params">url, data,options=&#123;&#125;</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> _fetch(url, data, <span class="string">'GET'</span>,options);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">post</span>(<span class="params">url, data,options=&#123;&#125;</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> _fetch(url, data, <span class="string">'POST'</span>,options);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// request.js</span></span><br><span class="line"><span class="keyword">import</span> &#123;get,post&#125; <span class="keyword">from</span> <span class="string">'./api.js'</span></span><br><span class="line"></span><br><span class="line">post(<span class="string">"/api/test"</span>,&#123;<span class="attr">title</span>:<span class="string">"标题"</span>&#125;,&#123;</span><br><span class="line">    dataType:<span class="string">"json"</span>,</span><br><span class="line">    cookie:<span class="literal">true</span>,</span><br><span class="line">    headers:&#123;</span><br><span class="line">        <span class="string">'Accept'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded'</span></span><br><span class="line">    &#125;  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="fetch-常见错误"><a href="#fetch-常见错误" class="headerlink" title="fetch 常见错误"></a>fetch 常见错误</h3><blockquote><p>Uncaught (in promise) SyntaxError: Unexpected token &lt; in JSON at position 0 at fetch.then.r (<anonymous>:22:70)</anonymous></p></blockquote><ul><li>当您向服务器发出请求并将响应解析为JSON时会发生这种情况，但它不是JSON</li></ul><h3 id="fetch-多数处理-小数据请求，form-images-因为他是-数据接收完毕以后再去处理"><a href="#fetch-多数处理-小数据请求，form-images-因为他是-数据接收完毕以后再去处理" class="headerlink" title="fetch 多数处理 小数据请求，form images 因为他是 数据接收完毕以后再去处理"></a>fetch 多数处理 小数据请求，<code>form</code> <code>images</code> 因为他是 数据接收完毕以后再去处理</h3><ul><li>渲染图片<ul><li>因为直接获取的 <code>res</code> 是一个 <code>blob</code> 大对象，需要使用  <code>URl.createObjectURL()</code> 进行浏览器解析</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> Oimg = <span class="built_in">document</span>.getElementById(<span class="string">'img'</span>);</span><br><span class="line">  <span class="keyword">let</span> Obtn = <span class="built_in">document</span>.getElementById(<span class="string">'btn'</span>);</span><br><span class="line">  Obtn.onclick=<span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> res = <span class="keyword">await</span> fetch(<span class="string">'/images/1.png'</span>);</span><br><span class="line">    <span class="keyword">let</span> url = URl.createObjectURL(res);</span><br><span class="line">    Oimg.src=url</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;fetch-是什么&quot;&gt;&lt;a href=&quot;#fetch-是什么&quot; class=&quot;headerlink&quot; title=&quot;fetch 是什么&quot;&gt;&lt;/a&gt;fetch 是什么&lt;/h3&gt;&lt;h3 id=&quot;get-请求&quot;&gt;&lt;a href=&quot;#get-请求&quot; class=&quot;head
      
    
    </summary>
    
      <category term="前端" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="hello" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/hello/"/>
    
    
      <category term="fetch" scheme="https://18600917746.github.io/tags/fetch/"/>
    
  </entry>
  
  <entry>
    <title>hello-H5</title>
    <link href="https://18600917746.github.io/2019/03/18/hello-H5/"/>
    <id>https://18600917746.github.io/2019/03/18/hello-H5/</id>
    <published>2019-03-18T01:08:12.000Z</published>
    <updated>2019-05-23T09:07:46.576Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是-H5"><a href="#什么是-H5" class="headerlink" title="什么是 H5"></a>什么是 <code>H5</code></h3><h4 id="HTML5-桌面通知：Notification-API"><a href="#HTML5-桌面通知：Notification-API" class="headerlink" title="HTML5 桌面通知：Notification API"></a>HTML5 桌面通知：<code>Notification</code> API</h4><blockquote><p>上代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p></blockquote><h3 id="浏览器窗体获得焦点则停止标题闪烁通知-失去焦点则开启标题闪烁通知"><a href="#浏览器窗体获得焦点则停止标题闪烁通知-失去焦点则开启标题闪烁通知" class="headerlink" title="浏览器窗体获得焦点则停止标题闪烁通知+失去焦点则开启标题闪烁通知"></a>浏览器窗体获得焦点则停止标题闪烁通知+失去焦点则开启标题闪烁通知</h3><blockquote><p>上代码</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> titleInit = <span class="built_in">document</span>.title, isShine = <span class="literal">true</span>;</span><br><span class="line">setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> title = <span class="built_in">document</span>.title;</span><br><span class="line">    <span class="keyword">if</span> (isShine == <span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="regexp">/新/</span>.test(title) == <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="built_in">document</span>.title = <span class="string">'【你有新消息】'</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">document</span>.title = <span class="string">'【　　　　　】'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.title = titleInit;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">500</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// for Chrome and FireFox</span></span><br><span class="line"><span class="built_in">window</span>.onfocus = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">123</span>);</span><br><span class="line">    isShine = <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">window</span>.onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    isShine = <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// for IE</span></span><br><span class="line"><span class="built_in">document</span>.onfocusin = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    isShine = <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">document</span>.onfocusout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    isShine = <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;什么是-H5&quot;&gt;&lt;a href=&quot;#什么是-H5&quot; class=&quot;headerlink&quot; title=&quot;什么是 H5&quot;&gt;&lt;/a&gt;什么是 &lt;code&gt;H5&lt;/code&gt;&lt;/h3&gt;&lt;h4 id=&quot;HTML5-桌面通知：Notification-API&quot;&gt;&lt;a href
      
    
    </summary>
    
      <category term="前端" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="H5" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/H5/"/>
    
    
      <category term="H5" scheme="https://18600917746.github.io/tags/H5/"/>
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cheng</title>
  
  <subtitle>腹有诗书气自华</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://18600917746.github.io/"/>
  <updated>2019-10-16T11:31:43.614Z</updated>
  <id>https://18600917746.github.io/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hello-nginx</title>
    <link href="https://18600917746.github.io/2019/10/16/hello-nginx/"/>
    <id>https://18600917746.github.io/2019/10/16/hello-nginx/</id>
    <published>2019-10-16T10:48:40.000Z</published>
    <updated>2019-10-16T11:31:43.614Z</updated>
    
    <content type="html"><![CDATA[<h3 id="是一个高性能的HTTP和反向代理web服务器"><a href="#是一个高性能的HTTP和反向代理web服务器" class="headerlink" title="是一个高性能的HTTP和反向代理web服务器"></a>是一个高性能的HTTP和反向代理web服务器</h3><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>海量并发 （2W-4W）</li><li>内存消耗少</li><li>免费商用化</li><li>配置简单</li></ul><h3 id="nginx-conf-默认配置"><a href="#nginx-conf-默认配置" class="headerlink" title="nginx.conf 默认配置"></a><code>nginx.conf</code> 默认配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">user nginx;</span><br><span class="line"><span class="comment"># 进程数   一般根据内核设置</span></span><br><span class="line">worker_processes auto;   </span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最大并发数</span></span><br><span class="line">events &#123;</span><br><span class="line">        worker_connections 768;</span><br><span class="line">        <span class="comment"># multi_accept on;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    <span class="comment"># 请求类型映射表</span></span><br><span class="line">    include /etc/nginx/mime.types;</span><br><span class="line">    default_type application/octet-stream;</span><br><span class="line">    <span class="comment"># 是否开启压缩</span></span><br><span class="line">    gzip on;</span><br><span class="line">    <span class="comment"># 引用外部配置表</span></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;是一个高性能的HTTP和反向代理web服务器&quot;&gt;&lt;a href=&quot;#是一个高性能的HTTP和反向代理web服务器&quot; class=&quot;headerlink&quot; title=&quot;是一个高性能的HTTP和反向代理web服务器&quot;&gt;&lt;/a&gt;是一个高性能的HTTP和反向代理web服
      
    
    </summary>
    
      <category term="后端" scheme="https://18600917746.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="nginx" scheme="https://18600917746.github.io/categories/%E5%90%8E%E7%AB%AF/nginx/"/>
    
    
      <category term="Nginx" scheme="https://18600917746.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>js排序</title>
    <link href="https://18600917746.github.io/2019/10/05/js%E6%8E%92%E5%BA%8F/"/>
    <id>https://18600917746.github.io/2019/10/05/js排序/</id>
    <published>2019-10-05T04:03:02.000Z</published>
    <updated>2019-10-05T08:45:50.082Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>冒泡排序</p><ul><li>ES5<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bubbleSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(arr)) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = arr.length - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">          [arr[j], arr[j + <span class="number">1</span>]] = [arr[j + <span class="number">1</span>], arr[j]];</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></blockquote><ul><li>ES6<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>插入排序</p><ul><li>ES5<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(arr)) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">      <span class="keyword">var</span> preIndex = i - <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">var</span> current = arr[i]</span><br><span class="line">      <span class="keyword">while</span> (preIndex &gt;= <span class="number">0</span> &amp;&amp; arr[preIndex] &gt; c) &#123;</span><br><span class="line">        arr[preIndex + <span class="number">1</span>] = arr[preIndex];</span><br><span class="line">        preIndex--;</span><br><span class="line">      &#125;</span><br><span class="line">      arr[preIndex + <span class="number">1</span>] = current;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></blockquote><ul><li>ES6<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>快速排序</p><ul><li>ES5<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quickSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="built_in">Array</span>.isArray(arr)) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">if</span> (arr.length &lt;= <span class="number">1</span>) <span class="keyword">return</span> arr;</span><br><span class="line">  <span class="keyword">var</span> left = [], right = [];</span><br><span class="line">  <span class="keyword">var</span> num = <span class="built_in">Math</span>.floor(arr.length / <span class="number">2</span>);</span><br><span class="line">  <span class="keyword">var</span> numValue = arr.splice(num, <span class="number">1</span>)[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i] &gt; numValue) &#123;</span><br><span class="line">      right.push(arr[i]);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      left.push(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> [...quickSort(left), numValue, ...quickSort(right)]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></blockquote><ul><li>ES6<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>希尔排序</p><ul><li>ES5<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">shellSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> len = arr.length,</span><br><span class="line">    temp,</span><br><span class="line">    gap = <span class="number">1</span>;</span><br><span class="line">  <span class="comment">// 动态定义间隔序列，也可以手动定义，如 gap = 5；</span></span><br><span class="line">  <span class="keyword">while</span> (gap &lt; len / <span class="number">5</span>) &#123;</span><br><span class="line">    gap = gap * <span class="number">5</span> + <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (gap; gap &gt; <span class="number">0</span>; gap = <span class="built_in">Math</span>.floor(gap / <span class="number">5</span>)) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = gap; i &lt; len; i++) &#123;</span><br><span class="line">      temp = arr[i];</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> j = i - gap; j &gt;= <span class="number">0</span> &amp;&amp; arr[j] &gt; temp; j -= gap) &#123;</span><br><span class="line">        arr[j + gap] = arr[j];</span><br><span class="line">      &#125;</span><br><span class="line">      arr[j + gap] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></blockquote><ul><li>ES6<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>归并排序</p><ul><li>ES5<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mergeSort</span>(<span class="params">arr</span>) </span>&#123;  <span class="comment">//采用自上而下的递归方法</span></span><br><span class="line">  <span class="keyword">var</span> len = arr.length;</span><br><span class="line">  <span class="keyword">if</span> (len &lt; <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> middle = <span class="built_in">Math</span>.floor(len / <span class="number">2</span>),</span><br><span class="line">    left = arr.slice(<span class="number">0</span>, middle),</span><br><span class="line">    right = arr.slice(middle);</span><br><span class="line">  <span class="keyword">return</span> merge(mergeSort(left), mergeSort(right));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">merge</span>(<span class="params">left, right</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> result = [];</span><br><span class="line">  <span class="keyword">while</span> (left.length &amp;&amp; right.length) &#123;</span><br><span class="line">    <span class="comment">// 不断比较left和right数组的第一项，小的取出存入res</span></span><br><span class="line">    left[<span class="number">0</span>] &lt; right[<span class="number">0</span>] ? result.push(left.shift()) : result.push(right.shift());</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result.concat(left, right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></blockquote><ul><li>ES6<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;冒泡排序&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ES5&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;
      
    
    </summary>
    
      <category term="茶余饭后" scheme="https://18600917746.github.io/categories/%E8%8C%B6%E4%BD%99%E9%A5%AD%E5%90%8E/"/>
    
      <category term="排序" scheme="https://18600917746.github.io/categories/%E8%8C%B6%E4%BD%99%E9%A5%AD%E5%90%8E/%E6%8E%92%E5%BA%8F/"/>
    
    
      <category term="js排序" scheme="https://18600917746.github.io/tags/js%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>ECMAScript 版本以及内容</title>
    <link href="https://18600917746.github.io/2019/10/04/ECMAscript%E7%89%88%E6%9C%AC%E4%BB%A5%E5%8F%8A%E5%86%85%E5%AE%B9/"/>
    <id>https://18600917746.github.io/2019/10/04/ECMAscript版本以及内容/</id>
    <published>2019-10-04T06:17:46.000Z</published>
    <updated>2019-10-04T06:22:01.434Z</updated>
    
    <content type="html"><![CDATA[<h3 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h3><ul><li>ECMAscript每年都会更新一版.</li><li>ECMAScript的命名是根据数字排序，从1开始: ES1, ES2, ES3, ES4, ES5</li><li>新版本 (从2015年起)ES命名是根据年份来算的: ES2015（ES6）, ES2016（ES7）, ES2017（ES8）,ES2018（ES9）,ES2019（ES10）</li><li>ECMAScript 是一个标准. JavaScript 是一种流行的ES标准的 实施语言. 其他的一些实施标准语言有: SpiderMonkey, V8, 和 ActionScript.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;版本&quot;&gt;&lt;a href=&quot;#版本&quot; class=&quot;headerlink&quot; title=&quot;版本&quot;&gt;&lt;/a&gt;版本&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;ECMAscript每年都会更新一版.&lt;/li&gt;
&lt;li&gt;ECMAScript的命名是根据数字排序，从1开始: ES1, ES2
      
    
    </summary>
    
      <category term="茶余饭后" scheme="https://18600917746.github.io/categories/%E8%8C%B6%E4%BD%99%E9%A5%AD%E5%90%8E/"/>
    
      <category term="文章" scheme="https://18600917746.github.io/categories/%E8%8C%B6%E4%BD%99%E9%A5%AD%E5%90%8E/%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="ES6版本" scheme="https://18600917746.github.io/tags/ES6%E7%89%88%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>vue-Components</title>
    <link href="https://18600917746.github.io/2019/08/20/vue-Components/"/>
    <id>https://18600917746.github.io/2019/08/20/vue-Components/</id>
    <published>2019-08-20T07:45:51.000Z</published>
    <updated>2019-08-22T08:52:33.219Z</updated>
    
    <content type="html"><![CDATA[<h3 id="自定义名称组件"><a href="#自定义名称组件" class="headerlink" title="自定义名称组件"></a>自定义名称组件</h3><ul><li>使用 <code>Vue.component</code> 自定义名称，注册全局组件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">'com1'</span>, &#123;</span><br><span class="line">    template: <span class="string">`</span></span><br><span class="line"><span class="string">       &lt;div&gt;组件全局定义&lt;/div&gt;</span></span><br><span class="line"><span class="string">    `</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;com1&gt;&lt;/com1&gt;</span><br></pre></td></tr></table></figure><h3 id="动态组件"><a href="#动态组件" class="headerlink" title="动态组件"></a>动态组件</h3><ul><li>使用 <code>template</code> 标签，使用 <code>:is</code> 判别要显示的模板</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;template :is=&quot;temName&quot;&gt;&lt;/template&gt;</span><br></pre></td></tr></table></figure><h3 id="组件-插槽-slot"><a href="#组件-插槽-slot" class="headerlink" title="组件 插槽 slot"></a>组件 插槽 <code>slot</code></h3><blockquote><p>默认插槽使用</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">'com1'</span>, &#123;</span><br><span class="line">    template: <span class="string">`</span></span><br><span class="line"><span class="string">       &lt;div&gt;</span></span><br><span class="line"><span class="string">            &lt;h1&gt;组件头部&lt;/h1&gt;</span></span><br><span class="line"><span class="string">            &lt;slot&gt;&lt;/slot&gt;</span></span><br><span class="line"><span class="string">            &lt;h3&gt;组件头部&lt;/h3&gt;</span></span><br><span class="line"><span class="string">       &lt;/div&gt;</span></span><br><span class="line"><span class="string">    `</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">const vm = new Vue(&#123;</span><br><span class="line">    el: &apos;#app&apos;,</span><br><span class="line">    data: &#123;&#125;,</span><br><span class="line">    template: `</span><br><span class="line">       &lt;template is=&quot;com1&quot;&gt;</span><br><span class="line">           &lt;div&gt;这是要替换组件内 slot 后显示的内容&lt;/div&gt;</span><br><span class="line">       &lt;/template&gt;</span><br><span class="line">    `</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>具名插槽使用</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">'com1'</span>, &#123;</span><br><span class="line">    template: <span class="string">`</span></span><br><span class="line"><span class="string">       &lt;div&gt;</span></span><br><span class="line"><span class="string">            &lt;slot name="title"&gt;组件头部&lt;/slot&gt;</span></span><br><span class="line"><span class="string">            &lt;slot&gt;&lt;/slot&gt;</span></span><br><span class="line"><span class="string">            &lt;h3&gt;组件头部&lt;/h3&gt;</span></span><br><span class="line"><span class="string">       &lt;/div&gt;</span></span><br><span class="line"><span class="string">    `</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">const vm = new Vue(&#123;</span><br><span class="line">    el: &apos;#app&apos;,</span><br><span class="line">    data: &#123;&#125;,</span><br><span class="line">    template: `</span><br><span class="line">       &lt;com1&gt;</span><br><span class="line">           &lt;template slot=&quot;title&quot;&gt;这是具名插槽的头部&lt;/template&gt;</span><br><span class="line">           &lt;div&gt;这是要替换组件内 slot 后显示的内容&lt;/div&gt;</span><br><span class="line">       &lt;/com1&gt;</span><br><span class="line">    `</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="组件传参"><a href="#组件传参" class="headerlink" title="组件传参"></a>组件传参</h3><blockquote><p>父组件 传递 子组件</p></blockquote><ul><li>没有使用 <code>v-bind</code> 或 <code>:</code> 绑定，传递的参数都是字符传</li><li>使用 <code>v-bind</code> 或 <code>:</code> 绑定，会根据实际数据类型传递</li><li>子组件接收时，使用 <code>props</code> 接收</li><li>总结：父组件通过props向下传递数据给子组件。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// 父组件</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Users</span> <span class="attr">v-bind:users</span>=<span class="string">"users"</span>&gt;</span><span class="tag">&lt;/<span class="name">Users</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> Users <span class="keyword">from</span> <span class="string">"./components/Users"</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="string">'App'</span>,</span></span><br><span class="line"><span class="undefined">    data() &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">            users: [<span class="string">"Henry"</span>, <span class="string">"Bucky"</span>, <span class="string">"Emily"</span>]</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    components: &#123;</span></span><br><span class="line"><span class="undefined">        Users</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// 子组件</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"user in users"</span>&gt;</span>&#123;&#123;user&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="string">'Users'</span>,</span></span><br><span class="line"><span class="undefined">    props: &#123;</span></span><br><span class="line"><span class="undefined">        users: &#123;</span></span><br><span class="line"><span class="javascript">            type: <span class="built_in">Array</span>,</span></span><br><span class="line"><span class="javascript">            required: <span class="literal">true</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>子组件 传递 父组件（通过事件形式）</p></blockquote><ul><li>子组件使用 <code>$emit</code> 发布自定义函数名，父组件使用 <code>v-on</code> 或 <code>@</code> 绑定自定义函数名，进行参数传递。</li><li>总结：子组件通过events给父组件发送消息，实际上就是子组件把自己的数据发送到父组件。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// 子组件</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> @<span class="attr">click</span>=<span class="string">"changeTitle"</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>//绑定一个点击事件</span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="string">'app-header'</span>,</span></span><br><span class="line"><span class="undefined">    data() &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">            title: <span class="string">"Vue.js Demo"</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    methods: &#123;</span></span><br><span class="line"><span class="undefined">        changeTitle() &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.$emit(<span class="string">"titleChanged"</span>, <span class="string">"子向父组件传值"</span>);<span class="comment">//自定义事件  传递值“子向父组件传值”</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">// 父组件</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">app-header</span> <span class="attr">v-on:titleChanged</span>=<span class="string">"updateTitle"</span>&gt;</span><span class="tag">&lt;/<span class="name">app-header</span>&gt;</span>//与子组件 titleChanged 自定义事件名保持一致</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> Header <span class="keyword">from</span> <span class="string">"./components/Header"</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="string">'App'</span>,</span></span><br><span class="line"><span class="undefined">    data() &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">            title: <span class="string">""</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    methods: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// updateTitle($event) 接受传递过来的参数</span></span></span><br><span class="line"><span class="undefined">        updateTitle(e) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.title = e;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    components: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="string">"app-header"</span>: Header,</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>隔代组件 向下传递数据  $attrs/$listeners</p></blockquote><ul><li>多级组件嵌套需要传递数据时，通常使用的方法是通过vuex</li><li>但如果仅仅是传递数据，而不做中间处理，使用 vuex 处理未免有点大材小用</li><li>使用 <code>inheritAttrs</code> 禁止 属性自动挂载到 <code>props</code> 上</li><li>使用 <code>v-bind:$attrs</code> 或 <code>:$attrs</code> 传递下一级</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">// 第一级</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>浪里行舟<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child-com1</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:foo</span>=<span class="string">"foo"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:boo</span>=<span class="string">"boo"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:coo</span>=<span class="string">"coo"</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">child-com1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> childCom1 = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"./childCom1.vue"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  components: &#123; childCom1 &#125;,</span></span><br><span class="line"><span class="undefined">  data() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      foo: <span class="string">"第一级"</span>,</span></span><br><span class="line"><span class="javascript">      boo: <span class="string">"第二级"</span>,</span></span><br><span class="line"><span class="javascript">      coo: <span class="string">"第三级"</span></span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">// 第二级</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">class</span>=<span class="string">"border"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>foo: &#123;&#123; foo &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>childCom1的$attrs: &#123;&#123; $attrs &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child-com2</span> <span class="attr">v-bind</span>=<span class="string">"$attrs"</span>&gt;</span><span class="tag">&lt;/<span class="name">child-com2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> childCom2 = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"./childCom2.vue"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  components: &#123;</span></span><br><span class="line"><span class="undefined">    childCom2</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="javascript">  inheritAttrs: <span class="literal">false</span>, <span class="comment">// 可以关闭自动挂载到组件根元素上的没有在props声明的属性</span></span></span><br><span class="line"><span class="undefined">  props: &#123;</span></span><br><span class="line"><span class="javascript">    foo: <span class="built_in">String</span> <span class="comment">// foo作为props属性绑定</span></span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  created() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.$attrs); <span class="comment">// &#123; boo: "第二级",coo: "第三级" &#125;</span></span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">// 第三级</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>boo: &#123;&#123; boo &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>childCom2: &#123;&#123; $attrs &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child-com3</span> <span class="attr">v-bind</span>=<span class="string">"$attrs"</span>&gt;</span><span class="tag">&lt;/<span class="name">child-com3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> childCom3 = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"./childCom3.vue"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  components: &#123;</span></span><br><span class="line"><span class="undefined">    childCom3</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="javascript">  inheritAttrs: <span class="literal">false</span>, <span class="comment">// 可以关闭自动挂载到组件根元素上的没有在props声明的属性</span></span></span><br><span class="line"><span class="undefined">  props: &#123;</span></span><br><span class="line"><span class="javascript">    boo: <span class="built_in">String</span></span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  created() &#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.$attrs); <span class="comment">// &#123; coo: "第三级" &#125;</span></span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="事件触发传递"><a href="#事件触发传递" class="headerlink" title="事件触发传递"></a>事件触发传递</h3><blockquote><p>$emit/$on（Bus）</p></blockquote><ul><li>通过一个空的Vue实例作为中央事件总线，执行组件使用 <code>$emit</code> 发布事件名,被执行组件使用 <code>$on</code> 执行自定义事件名事件</li><li>$on 监听了自定义事件 fun-a，因为有时不确定何时会触发事件，一般会在 mounted 或 created 钩子中来监听</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建空的 Vue 实例</span></span><br><span class="line"><span class="keyword">var</span> Event=<span class="keyword">new</span> Vue();</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Event;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">// 执行组件</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> @<span class="attr">click</span>=<span class="string">"fun_on()"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">app-header"</span>&gt;</span><span class="tag">&lt;/<span class="name">app-header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> Header <span class="keyword">from</span> <span class="string">"./components/Header"</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> Event <span class="keyword">from</span> <span class="string">"./utils/Bus"</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="string">'App'</span>,</span></span><br><span class="line"><span class="undefined">    data() &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">            title: <span class="string">""</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    methods: &#123;</span></span><br><span class="line"><span class="undefined">        fun_on() &#123;</span></span><br><span class="line"><span class="javascript">           Event.$emit(<span class="string">'fun-a'</span>,<span class="keyword">this</span>.title);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    components: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="string">"app-header"</span>: Header,</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// 被执行组件</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> &gt;</span>&#123;&#123;title&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> Event <span class="keyword">from</span> <span class="string">"./utils/Bus"</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="string">'app-header'</span>,</span></span><br><span class="line"><span class="undefined">    data() &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">            title: <span class="string">""</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    mounted()&#123;</span></span><br><span class="line"><span class="javascript">        Event.$on(<span class="string">'fun-a'</span>,data=&gt;&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(data);</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="组件通讯-总结"><a href="#组件通讯-总结" class="headerlink" title="组件通讯 总结"></a>组件通讯 总结</h3><ul><li>父子通信： 父向子传递数据是通过 props，子向父是通过 events（$emit）；通过父链 / 子链也可以通信（$parent / $children）；ref 也可以访问组件实例；provide / inject API；$attrs/$listeners</li><li>兄弟通信： Bus；Vuex</li><li>跨级通信： Bus；Vuex；provide / inject API、$attrs/$listeners</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;自定义名称组件&quot;&gt;&lt;a href=&quot;#自定义名称组件&quot; class=&quot;headerlink&quot; title=&quot;自定义名称组件&quot;&gt;&lt;/a&gt;自定义名称组件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;Vue.component&lt;/code&gt; 自定义名称，注册全局组件&lt;/
      
    
    </summary>
    
      <category term="前端" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="vue" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/vue/"/>
    
      <category term="Components" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/vue/Components/"/>
    
    
      <category term="vue" scheme="https://18600917746.github.io/tags/vue/"/>
    
      <category term="vue-Components" scheme="https://18600917746.github.io/tags/vue-Components/"/>
    
  </entry>
  
  <entry>
    <title>vue-Ajax</title>
    <link href="https://18600917746.github.io/2019/08/20/vue-Ajax/"/>
    <id>https://18600917746.github.io/2019/08/20/vue-Ajax/</id>
    <published>2019-08-20T07:03:31.000Z</published>
    <updated>2019-08-21T10:12:50.802Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用-fetch-formData"><a href="#使用-fetch-formData" class="headerlink" title="使用 fetch formData"></a>使用 <code>fetch</code> <code>formData</code></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">ref</span>=<span class="string">"form1"</span> @<span class="attr">click.pervent</span>=<span class="string">"fn_submit()"</span> <span class="attr">action</span>=<span class="string">"a.php"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"a"</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"b"</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">        结果：&#123;&#123;result&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#app'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        result: <span class="string">''</span></span><br><span class="line">    &#125;,</span><br><span class="line">    method: &#123;</span><br><span class="line">        <span class="keyword">async</span> fn_submit() &#123;</span><br><span class="line">            <span class="keyword">let</span> form = <span class="keyword">this</span>.$refs[<span class="string">'form1'</span>];</span><br><span class="line">            <span class="keyword">let</span> formData = <span class="keyword">new</span> FormData(form);</span><br><span class="line">            <span class="keyword">let</span> res = <span class="keyword">await</span> fetch(form.action, &#123;</span><br><span class="line">                method: form.method,</span><br><span class="line">                body: formData</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">let</span> result = res.json();</span><br><span class="line">            <span class="keyword">this</span>.result = result;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="使用-axios"><a href="#使用-axios" class="headerlink" title="使用 axios"></a>使用 <code>axios</code></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"a"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"b"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"提交"</span> @<span class="attr">click</span>=<span class="string">"fn_submit()"</span>&gt;</span></span><br><span class="line">        结果：&#123;&#123;result&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Axios <span class="keyword">from</span> <span class="string">'axios'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;stringify&#125; <span class="keyword">from</span> <span class="string">'querystring'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> axios = <span class="keyword">new</span> Axios.create(&#123;</span><br><span class="line">    transformRequest: [</span><br><span class="line">        <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> stringify(data);</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#app'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        a: <span class="number">0</span>,</span><br><span class="line">        b: <span class="number">0</span>,</span><br><span class="line">        result: <span class="string">''</span></span><br><span class="line">    &#125;,</span><br><span class="line">    method: &#123;</span><br><span class="line">        <span class="keyword">async</span> fn_submit() &#123;</span><br><span class="line">            <span class="keyword">let</span> &#123;data&#125; = <span class="keyword">await</span> axios(&#123;</span><br><span class="line">                url: <span class="string">'a.php'</span>,</span><br><span class="line">                method: <span class="string">'post'</span>,</span><br><span class="line">                data: &#123;</span><br><span class="line">                    a: <span class="keyword">this</span>.a,</span><br><span class="line">                    b: <span class="keyword">this</span>.b</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">this</span>.result = data;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="vue2-0-vue-cli-使用-axios"><a href="#vue2-0-vue-cli-使用-axios" class="headerlink" title="vue2.0 vue-cli 使用 axios"></a>vue2.0 vue-cli 使用 axios</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Axios <span class="keyword">from</span> <span class="string">'axios'</span>;</span><br><span class="line"><span class="keyword">import</span> VueAxios <span class="keyword">from</span> <span class="string">'vue-axios'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Vue.use(VueAxios,Axios);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#app'</span>,</span><br><span class="line">    data: &#123;&#125;,</span><br><span class="line">    <span class="keyword">async</span> create()&#123;</span><br><span class="line">        <span class="keyword">let</span> &#123;data&#125; = <span class="keyword">await</span> <span class="keyword">this</span>.axios.get();</span><br><span class="line">        <span class="keyword">let</span> &#123;data&#125; = <span class="keyword">await</span> <span class="keyword">this</span>.$http.get();</span><br><span class="line">        <span class="keyword">let</span> &#123;data&#125; = <span class="keyword">await</span> Vue.axios.get();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="vue2-0-vue-cli-使用-vue-resource"><a href="#vue2-0-vue-cli-使用-vue-resource" class="headerlink" title="vue2.0 vue-cli 使用 vue-resource"></a>vue2.0 vue-cli 使用 vue-resource</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> VueResource <span class="keyword">from</span> <span class="string">'vue-resource'</span>;</span><br><span class="line"></span><br><span class="line">Vue.use(VueResource);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#app'</span>,</span><br><span class="line">    data: &#123;&#125;,</span><br><span class="line">    <span class="keyword">async</span> create()&#123;</span><br><span class="line">        <span class="keyword">let</span> &#123;data&#125; = <span class="keyword">await</span> <span class="keyword">this</span>.$http.get();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="vue2-0-vue-cli-使用-fetch"><a href="#vue2-0-vue-cli-使用-fetch" class="headerlink" title="vue2.0 vue-cli 使用 fetch"></a>vue2.0 vue-cli 使用 fetch</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#app'</span>,</span><br><span class="line">    data: &#123;&#125;,</span><br><span class="line">    <span class="keyword">async</span> create()&#123;</span><br><span class="line">        <span class="keyword">let</span> res = <span class="keyword">await</span> fetch(<span class="string">''</span>);</span><br><span class="line">        <span class="keyword">let</span> data = <span class="keyword">await</span> res.json();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;使用-fetch-formData&quot;&gt;&lt;a href=&quot;#使用-fetch-formData&quot; class=&quot;headerlink&quot; title=&quot;使用 fetch formData&quot;&gt;&lt;/a&gt;使用 &lt;code&gt;fetch&lt;/code&gt; &lt;code&gt;formDat
      
    
    </summary>
    
      <category term="前端" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="vue" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/vue/"/>
    
      <category term="Ajax" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/vue/Ajax/"/>
    
    
      <category term="vue" scheme="https://18600917746.github.io/tags/vue/"/>
    
      <category term="vue-Ajax" scheme="https://18600917746.github.io/tags/vue-Ajax/"/>
    
  </entry>
  
  <entry>
    <title>vue-Router</title>
    <link href="https://18600917746.github.io/2019/08/19/vue-Router/"/>
    <id>https://18600917746.github.io/2019/08/19/vue-Router/</id>
    <published>2019-08-19T05:47:16.000Z</published>
    <updated>2019-08-20T07:48:02.733Z</updated>
    
    <content type="html"><![CDATA[<h3 id="vue-监听-router"><a href="#vue-监听-router" class="headerlink" title="vue 监听 router"></a>vue 监听 router</h3><blockquote><p>1、使用 <code>watch</code> 监听<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;vue-监听-router&quot;&gt;&lt;a href=&quot;#vue-监听-router&quot; class=&quot;headerlink&quot; title=&quot;vue 监听 router&quot;&gt;&lt;/a&gt;vue 监听 router&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;1、使用 &lt;code&gt;wa
      
    
    </summary>
    
      <category term="前端" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="vue" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/vue/"/>
    
      <category term="Router" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/vue/Router/"/>
    
    
      <category term="vue" scheme="https://18600917746.github.io/tags/vue/"/>
    
      <category term="vue-Router" scheme="https://18600917746.github.io/tags/vue-Router/"/>
    
  </entry>
  
  <entry>
    <title>hello-webpack</title>
    <link href="https://18600917746.github.io/2019/08/02/hello-webpack/"/>
    <id>https://18600917746.github.io/2019/08/02/hello-webpack/</id>
    <published>2019-08-02T07:43:20.000Z</published>
    <updated>2019-08-05T10:19:18.640Z</updated>
    
    <content type="html"><![CDATA[<h3 id="webpack-项目安装-【不建议全局安装，会锁定版本】"><a href="#webpack-项目安装-【不建议全局安装，会锁定版本】" class="headerlink" title="webpack 项目安装 【不建议全局安装，会锁定版本】"></a>webpack 项目安装 【不建议全局安装，会锁定版本】</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev webpack</span><br><span class="line">// 4.0+ 需要安装</span><br><span class="line">npm install --save-dev webpack-cli</span><br></pre></td></tr></table></figure><h3 id="webpack-功能"><a href="#webpack-功能" class="headerlink" title="webpack 功能"></a>webpack 功能</h3><ul><li>压缩</li><li>打包</li><li>多文件编译 - loader</li><li>脚手架</li><li>生成版本编写</li></ul><h3 id="webpack-config-js-配置文件编写"><a href="#webpack-config-js-配置文件编写" class="headerlink" title="webpack.config.js 配置文件编写"></a>webpack.config.js 配置文件编写</h3><ul><li>单入口</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    mode: <span class="string">'development'</span>,</span><br><span class="line">    entry: <span class="string">'./js/js.js'</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build'</span>),</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>多入口</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    mode: <span class="string">'development'</span>,</span><br><span class="line">    entry: &#123;</span><br><span class="line">        index: <span class="string">'./js/js.js'</span>,</span><br><span class="line">        admin: <span class="string">'./js/admin.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build'</span>),</span><br><span class="line">        filename: <span class="string">'[name].bundle.js'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="loader-处理-js-以外的文件"><a href="#loader-处理-js-以外的文件" class="headerlink" title="loader 处理 js 以外的文件"></a>loader 处理 js 以外的文件</h3><ul><li>css-loader    处理css</li><li>style-loader  </li><li>file-loader   读取并输出文件</li><li>url-loader    读取并输出 base64</li><li>postcss-loader    【自动添加前缀】<h3 id="loader-举例说明"><a href="#loader-举例说明" class="headerlink" title="loader 举例说明"></a>loader 举例说明</h3></li><li>处理 css</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    mode: <span class="string">'development'</span>,</span><br><span class="line">    entry: <span class="string">'./js/js.js'</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build'</span>),</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">                use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>, <span class="string">'postcss-loader'</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>处理图片</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    mode: <span class="string">'development'</span>,</span><br><span class="line">    entry: <span class="string">'./js/js.js'</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build'</span>),</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.(jpg|png|gif)$/i</span>,</span><br><span class="line">                use: &#123;</span><br><span class="line">                    loader: <span class="string">'url-loader'</span>,</span><br><span class="line">                    options: &#123;</span><br><span class="line">                        outputPath:  <span class="string">'images/'</span>,</span><br><span class="line">                        limit: <span class="number">20</span>*<span class="number">1024</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>处理 less</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    mode: <span class="string">'development'</span>,</span><br><span class="line">    entry: <span class="string">'./js/js.js'</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build'</span>),</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.less/i</span>,</span><br><span class="line">                use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>, <span class="string">'less-loader'</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>处理 es6 + </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    mode: <span class="string">'development'</span>,</span><br><span class="line">    entry: <span class="string">'./js/js.js'</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build'</span>),</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test:<span class="regexp">/\.jsx?/i</span>,</span><br><span class="line">                exclude:<span class="regexp">/node_modules/</span>,</span><br><span class="line">                use:&#123;</span><br><span class="line">                    loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">                    options:&#123;</span><br><span class="line">                        presets:[<span class="string">'@babel/preset-env'</span>]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>开启 source-map</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    mode: <span class="string">'development'</span>,</span><br><span class="line">    entry: <span class="string">'./js/js.js'</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build'</span>),</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test:<span class="regexp">/\.jsx?/i</span>,</span><br><span class="line">                exclude:<span class="regexp">/node_modules/</span>,</span><br><span class="line">                use:&#123;</span><br><span class="line">                    loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">                    options:&#123;</span><br><span class="line">                        presets:[<span class="string">'@babel/preset-env'</span>]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    devtool: <span class="string">'source-map'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>开启 热更新</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webpack webpack-cli webpack-dev-server</span><br></pre></td></tr></table></figure><ul><li>启动 eslint</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    mode: <span class="string">'development'</span>,</span><br><span class="line">    entry: <span class="string">'./js/js.js'</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build'</span>),</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.js/i</span>,</span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">                loader: <span class="string">'eslint-loader'</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><pre><code>.eslinrc</code></pre><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"parserOptions"</span>: &#123;</span><br><span class="line">    <span class="attr">"ecmaVersion"</span>: <span class="number">6</span>,</span><br><span class="line">    <span class="attr">"sourceType"</span>: <span class="string">"module"</span>,</span><br><span class="line">    <span class="attr">"ecmaFeatures"</span>: &#123;</span><br><span class="line">      <span class="attr">"jsx"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"rules"</span>: &#123;</span><br><span class="line">    <span class="attr">"indent"</span>: [<span class="string">"error"</span>,<span class="number">2</span>],</span><br><span class="line">    <span class="attr">"linebreak-style"</span>: [<span class="string">"error"</span>,<span class="string">"windows"</span>],</span><br><span class="line">    <span class="attr">"quotes"</span>: [<span class="string">"error"</span>,<span class="string">"double"</span>],</span><br><span class="line">    <span class="attr">"semi"</span>: [<span class="string">"error"</span>,<span class="string">"always"</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;webpack-项目安装-【不建议全局安装，会锁定版本】&quot;&gt;&lt;a href=&quot;#webpack-项目安装-【不建议全局安装，会锁定版本】&quot; class=&quot;headerlink&quot; title=&quot;webpack 项目安装 【不建议全局安装，会锁定版本】&quot;&gt;&lt;/a&gt;we
      
    
    </summary>
    
      <category term="hello" scheme="https://18600917746.github.io/categories/hello/"/>
    
      <category term="webpack" scheme="https://18600917746.github.io/categories/hello/webpack/"/>
    
    
      <category term="webpack" scheme="https://18600917746.github.io/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>hello-gulp</title>
    <link href="https://18600917746.github.io/2019/07/31/hello-gulp/"/>
    <id>https://18600917746.github.io/2019/07/31/hello-gulp/</id>
    <published>2019-07-31T09:42:56.000Z</published>
    <updated>2019-10-06T04:02:07.045Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装-gulp"><a href="#安装-gulp" class="headerlink" title="安装 gulp"></a>安装 <code>gulp</code></h2><ul><li><p>全局启动器安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g gulp</span><br></pre></td></tr></table></figure></li><li><p>项目依赖安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i gulp</span><br></pre></td></tr></table></figure></li></ul><h2 id="配置文件创建"><a href="#配置文件创建" class="headerlink" title="配置文件创建"></a>配置文件创建</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch gulpfile.js</span><br></pre></td></tr></table></figure><h2 id="内置-api"><a href="#内置-api" class="headerlink" title="内置 api"></a>内置 api</h2><ul><li>src 入口路径</li><li>pipe 管道</li><li>task 任务定义</li><li>watch 实时检测</li><li>dest 出口路径<h2 id="添加中间件"><a href="#添加中间件" class="headerlink" title="添加中间件"></a>添加中间件</h2></li><li>[压缩js]<ul><li>gulp-uglify </li></ul></li><li>[汇总js并重命名]<ul><li>gulp-concat </li></ul></li><li>[文件重命名]<ul><li>gulp-rename </li></ul></li><li>[ES6编译]<ul><li>gulp-babel</li><li>@babel/core</li><li>@babel/preset-env</li></ul></li><li>[开发调试]<ul><li>gulp-sourcemaps</li></ul></li><li>[css文件压缩]<ul><li>gulp-cssmin</li></ul></li><li>[images压缩-渐进式加载]<ul><li>gulp-imagemin</li></ul></li><li>[浏览器自动刷新]<ul><li>gulp-livereload<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm i gulp-uglify -D</span><br><span class="line">npm i gulp-concat -D</span><br><span class="line">npm i gulp-rename -D</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="配置文件基本演示"><a href="#配置文件基本演示" class="headerlink" title="配置文件基本演示"></a>配置文件基本演示</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">const</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>);</span><br><span class="line"><span class="keyword">const</span> concat = <span class="built_in">require</span>(<span class="string">'gulp-concat'</span>);</span><br><span class="line"><span class="keyword">const</span> rename = <span class="built_in">require</span>(<span class="string">'gulp-rename'</span>);</span><br><span class="line"><span class="keyword">const</span> babel = <span class="built_in">require</span>(<span class="string">'gulp-babel'</span>);</span><br><span class="line"><span class="keyword">const</span> sourcemaps = <span class="built_in">require</span>(<span class="string">'gulp-sourcemaps'</span>);</span><br><span class="line"><span class="keyword">const</span> cssmin = <span class="built_in">require</span>(<span class="string">'gulp-cssmin'</span>);</span><br><span class="line"><span class="keyword">const</span> imagemin = <span class="built_in">require</span>(<span class="string">'gulp-imagemin'</span>);</span><br><span class="line"><span class="keyword">const</span> less = <span class="built_in">require</span>(<span class="string">'gulp-less'</span>);</span><br><span class="line">gulp.task(<span class="string">'js'</span>,()=&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'./src/js/**/*.js'</span>])</span><br><span class="line">    .pipe(sourcemaps.init())</span><br><span class="line">    .pipe(babel(&#123;</span><br><span class="line">        presets:[<span class="string">'@babel/env'</span>]</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(concat(<span class="string">'bundle.min.js'</span>))</span><br><span class="line">    .pipe(rename(&#123;<span class="attr">suffix</span>:<span class="string">'.min'</span>&#125;))</span><br><span class="line">    .pipe(uglify())</span><br><span class="line">    .pipe(sourcemaps.write())</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./build/js'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'css'</span>,()=&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'./src/css/**/*.css'</span>])</span><br><span class="line">    .pipe(sourcemaps.init())</span><br><span class="line">    .pipe(concat(<span class="string">'style.min.css'</span>))</span><br><span class="line">    .pupe(less())</span><br><span class="line">    .pipe(cssmin())</span><br><span class="line">    .pipe(sourcemaps.write())</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./build/css'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'image'</span>,()=&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'./src/images/**/*.png'</span>,<span class="string">'./src/images/**/*.jpg'</span>,<span class="string">'./src/images/**/*.jpeg'</span>,<span class="string">'./src/images/**/*.gif'</span>])</span><br><span class="line">    .pipe(imagemin([</span><br><span class="line">        imagemin.gifsicle(&#123;<span class="attr">interlaced</span>: <span class="literal">true</span>&#125;),</span><br><span class="line">        imagemin.jpegtran(&#123;<span class="attr">progressive</span>: <span class="literal">true</span>&#125;),</span><br><span class="line">        imagemin.optipng(&#123;<span class="attr">optimizationLevel</span>: <span class="number">5</span>&#125;),</span><br><span class="line">        imagemin.svgo(&#123;</span><br><span class="line">            plugins: [</span><br><span class="line">                &#123;<span class="attr">removeViewBox</span>: <span class="literal">true</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">cleanupIDs</span>: <span class="literal">false</span>&#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;) </span><br><span class="line">    ]))</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'dist/images'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>,[<span class="string">'js'</span>,<span class="string">'css'</span>,<span class="string">'image'</span>],<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  gulp.watch(<span class="string">'./src/images/*'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    gulp.run(<span class="string">'image'</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  gulp.watch(<span class="string">'./src/css/*'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    gulp.run(<span class="string">'css'</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  gulp.watch(<span class="string">'./src/js/*'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    gulp.run(<span class="string">'js'</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="gulp-4-最新版"><a href="#gulp-4-最新版" class="headerlink" title="gulp 4.+ 最新版"></a>gulp 4.+ 最新版</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">const</span> imagemin = <span class="built_in">require</span>(<span class="string">'gulp-imagemin'</span>);</span><br><span class="line"><span class="keyword">const</span> concat = <span class="built_in">require</span>(<span class="string">'gulp-concat'</span>);</span><br><span class="line"><span class="keyword">const</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>);</span><br><span class="line"><span class="keyword">const</span> rename = <span class="built_in">require</span>(<span class="string">'gulp-rename'</span>);</span><br><span class="line"><span class="keyword">const</span> babel = <span class="built_in">require</span>(<span class="string">'gulp-babel'</span>);</span><br><span class="line"><span class="keyword">const</span> sourcemaps = <span class="built_in">require</span>(<span class="string">'gulp-sourcemaps'</span>);</span><br><span class="line"><span class="keyword">const</span> cssmin = <span class="built_in">require</span>(<span class="string">'gulp-cssmin'</span>);</span><br><span class="line"><span class="keyword">const</span> less = <span class="built_in">require</span>(<span class="string">'gulp-less'</span>);</span><br><span class="line"><span class="keyword">const</span> htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span><br><span class="line"><span class="keyword">const</span> autoprefixer = <span class="built_in">require</span>(<span class="string">'gulp-autoprefixer'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> rev = <span class="built_in">require</span>(<span class="string">'gulp-rev-dxb'</span>); <span class="comment">// 生成版本号清单</span></span><br><span class="line"><span class="keyword">const</span> revCollector = <span class="built_in">require</span>(<span class="string">'gulp-rev-collector-dxb'</span>); <span class="comment">// 替换成版本号文件</span></span><br><span class="line"><span class="comment">// 生成版本号清单</span></span><br><span class="line">gulp.task(<span class="string">'rev'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> gulp.src([<span class="string">'./src/js/**'</span>, <span class="string">'./src/css/**'</span>])</span><br><span class="line">.pipe(rev())</span><br><span class="line">.pipe(rev.manifest(&#123;</span><br><span class="line">merge: <span class="literal">true</span></span><br><span class="line">&#125;))</span><br><span class="line">.pipe(gulp.dest(<span class="string">"./"</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加版本号（路径替换） 并压缩</span></span><br><span class="line">gulp.task(<span class="string">'add_version'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">let</span> options = &#123;</span><br><span class="line">collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">collapseBooleanAttributes: <span class="literal">true</span>,</span><br><span class="line">removeComments: <span class="literal">true</span>,</span><br><span class="line">removeEmptyAttributes: <span class="literal">true</span>,</span><br><span class="line">removeScriptTypeAttributes: <span class="literal">true</span>,</span><br><span class="line">removeStyleLinkTypeAttributes: <span class="literal">true</span>,</span><br><span class="line">minifyJS: <span class="literal">true</span>,</span><br><span class="line">minifyCSS: <span class="literal">true</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">return</span> gulp.src([<span class="string">'./rev-manifest.json'</span>, <span class="string">'./src/*.html'</span>])</span><br><span class="line">.pipe(revCollector()) <span class="comment">// 根据.json文件 执行文件内js/css名的替换</span></span><br><span class="line">.pipe(htmlmin(options))</span><br><span class="line">.pipe(gulp.dest(<span class="string">'./dist'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'js'</span>, () =&gt; &#123;</span><br><span class="line"><span class="keyword">return</span> gulp.src([<span class="string">'./src/js/**/*.js'</span>])</span><br><span class="line">.pipe(sourcemaps.init())</span><br><span class="line">.pipe(babel(&#123;</span><br><span class="line">presets: [<span class="string">'@babel/env'</span>]</span><br><span class="line">&#125;))</span><br><span class="line">.pipe(concat(<span class="string">'index.js'</span>))</span><br><span class="line"><span class="comment">// .pipe(rename(&#123;</span></span><br><span class="line"><span class="comment">// suffix: '.min'</span></span><br><span class="line"><span class="comment">// &#125;))</span></span><br><span class="line">.pipe(uglify())</span><br><span class="line">.pipe(sourcemaps.write())</span><br><span class="line">.pipe(gulp.dest(<span class="string">'./dist/js'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'css'</span>, () =&gt; &#123;</span><br><span class="line"><span class="keyword">return</span> gulp.src([<span class="string">'./src/css/**/*.css'</span>])</span><br><span class="line">.pipe(sourcemaps.init())</span><br><span class="line">.pipe(concat(<span class="string">'index.css'</span>))</span><br><span class="line">.pipe(less())</span><br><span class="line">.pipe(autoprefixer())</span><br><span class="line">.pipe(cssmin())</span><br><span class="line">.pipe(sourcemaps.write())</span><br><span class="line">.pipe(gulp.dest(<span class="string">'./dist/css'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'image'</span>, () =&gt; &#123;</span><br><span class="line"><span class="keyword">return</span> gulp.src([<span class="string">'./src/images/**/*.png'</span>, <span class="string">'./src/images/**/*.jpg'</span>, <span class="string">'./src/images/**/*.jpeg'</span>, <span class="string">'./src/images/**/*.gif'</span>])</span><br><span class="line">.pipe(imagemin([</span><br><span class="line">imagemin.gifsicle(&#123;</span><br><span class="line">interlaced: <span class="literal">true</span></span><br><span class="line">&#125;),</span><br><span class="line">imagemin.jpegtran(&#123;</span><br><span class="line">progressive: <span class="literal">true</span></span><br><span class="line">&#125;),</span><br><span class="line">imagemin.optipng(&#123;</span><br><span class="line">optimizationLevel: <span class="number">6</span></span><br><span class="line">&#125;),</span><br><span class="line">imagemin.svgo(&#123;</span><br><span class="line">plugins: [&#123;</span><br><span class="line">removeViewBox: <span class="literal">true</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">cleanupIDs: <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br><span class="line">]))</span><br><span class="line">.pipe(gulp.dest(<span class="string">'./dist/images'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'all'</span>, gulp.series(gulp.series(<span class="string">'js'</span>, <span class="string">'css'</span>, <span class="string">'image'</span>, gulp.parallel(<span class="string">'rev'</span>)), gulp.parallel(</span><br><span class="line"><span class="string">'add_version'</span>)));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装-gulp&quot;&gt;&lt;a href=&quot;#安装-gulp&quot; class=&quot;headerlink&quot; title=&quot;安装 gulp&quot;&gt;&lt;/a&gt;安装 &lt;code&gt;gulp&lt;/code&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;全局启动器安装&lt;/p&gt;
&lt;figure class=&quot;h
      
    
    </summary>
    
      <category term="前端" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="hello" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/hello/"/>
    
    
      <category term="gulp" scheme="https://18600917746.github.io/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>hello-java-http</title>
    <link href="https://18600917746.github.io/2019/06/13/hello-java-http/"/>
    <id>https://18600917746.github.io/2019/06/13/hello-java-http/</id>
    <published>2019-06-13T01:58:55.000Z</published>
    <updated>2019-06-13T04:00:18.491Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、有注解"><a href="#一、有注解" class="headerlink" title="一、有注解"></a>一、有注解</h2><h3 id="1、请求路径参数"><a href="#1、请求路径参数" class="headerlink" title="1、请求路径参数"></a>1、请求路径参数</h3><ul><li>@PathVariable 接收 <code>动态路由</code> </li><li>@RequestParam 接收 <code>查询参数</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/demo/123?name=cheng</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/demo/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo</span><span class="params">(@PathVariable(name = <span class="string">"id"</span>)</span> String id, @<span class="title">RequestParam</span><span class="params">(name = <span class="string">"name"</span>)</span> String name) </span>&#123;</span><br><span class="line">    System.out.println(id); <span class="comment">// 123</span></span><br><span class="line">    System.out.println(name); <span class="comment">// cheng</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、Body参数"><a href="#2、Body参数" class="headerlink" title="2、Body参数"></a>2、Body参数</h3><ul><li><p><code>post</code> <code>application/json</code> 请求</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    type:<span class="string">'post'</span>,</span><br><span class="line">    url:<span class="string">'/dome1'</span>,</span><br><span class="line">    data:&#123;</span><br><span class="line">        id:<span class="number">1</span>,</span><br><span class="line">        name:<span class="string">'测试'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>@RequestBody 接收 <code>body</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(path = <span class="string">"/demo1"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">(@RequestBody Person person)</span> </span>&#123;</span><br><span class="line">    System.out.println(person.toString()); <span class="comment">// id:1;name=测试;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(path = <span class="string">"/demo1"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">(@RequestBody Map&lt;String, String&gt; person)</span> </span>&#123;</span><br><span class="line">    System.out.println(person.get(<span class="string">"name"</span>)); <span class="comment">// 测试</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>@RequestBody 接收 <code>文件</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(path = <span class="string">"/demo1"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">(@RequestBody MultiValueMap&lt;String,String&gt;map file)</span> </span>&#123;</span><br><span class="line">    System.out.println(file); <span class="comment">// file[0]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>@RequestBody 接收 <code>多文件</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(path = <span class="string">"/demo1"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">(@RequestBody MultiValueMap&lt;String,String&gt;map[] file)</span> </span>&#123;</span><br><span class="line">    System.out.println(file); <span class="comment">//  [] </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、-无注解-（一般都会注解）"><a href="#二、-无注解-（一般都会注解）" class="headerlink" title="二、 无注解 （一般都会注解）"></a>二、 无注解 （一般都会注解）</h2><h2 id="三、-获取请求头"><a href="#三、-获取请求头" class="headerlink" title="三、 获取请求头"></a>三、 获取请求头</h2><ul><li>@RequestHeader 获取 <code>请求头</code></li><li>@CookieValue 获取 <code>Cookie</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/demo3"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo3</span><span class="params">(@RequestHeader(name = <span class="string">"myHeader"</span>)</span> String myHeader,</span></span><br><span class="line"><span class="function">        @<span class="title">CookieValue</span><span class="params">(name = <span class="string">"myCookie"</span>)</span> String myCookie) </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"myHeader="</span> + myHeader);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注解学习"><a href="#注解学习" class="headerlink" title="注解学习"></a>注解学习</h2><ul><li>@RequestMapping <ul><li>method - 指定的类型</li><li>value - 指定请求的地址</li><li>produces - 指定响应类型</li><li>comsumes - 指定请求类型</li><li>header - 根据请求中的消息头内容缩小请求映射的范围</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/test1"</span>, method = RequestMethod.POST)</span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、有注解&quot;&gt;&lt;a href=&quot;#一、有注解&quot; class=&quot;headerlink&quot; title=&quot;一、有注解&quot;&gt;&lt;/a&gt;一、有注解&lt;/h2&gt;&lt;h3 id=&quot;1、请求路径参数&quot;&gt;&lt;a href=&quot;#1、请求路径参数&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="后端" scheme="https://18600917746.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Java" scheme="https://18600917746.github.io/categories/%E5%90%8E%E7%AB%AF/Java/"/>
    
      <category term="Spring Boot" scheme="https://18600917746.github.io/categories/%E5%90%8E%E7%AB%AF/Java/Spring-Boot/"/>
    
    
      <category term="Java" scheme="https://18600917746.github.io/tags/Java/"/>
    
      <category term="Spring Boot" scheme="https://18600917746.github.io/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>hello-dart</title>
    <link href="https://18600917746.github.io/2019/06/08/hello-dart/"/>
    <id>https://18600917746.github.io/2019/06/08/hello-dart/</id>
    <published>2019-06-08T14:31:59.000Z</published>
    <updated>2019-06-24T06:05:45.373Z</updated>
    
    <content type="html"><![CDATA[<h3 id="程序主入口"><a href="#程序主入口" class="headerlink" title="程序主入口"></a>程序主入口</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">main() &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'你好'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Dart-的数据类型"><a href="#Dart-的数据类型" class="headerlink" title="Dart 的数据类型"></a>Dart 的数据类型</h3><ul><li>Numbers（数值）<ul><li>int（整型）</li><li>double（浮点）</li></ul></li><li>Strings（字符串）</li><li>Booleans（布尔）</li><li>List（数组）<ul><li>在 Dart 中，数组是列表对象，所以大多数人称为列表</li></ul></li><li>Maps（字典）<ul><li>通常来说，Map 是一个键值对的对象。</li></ul></li></ul><h3 id="Dart-变量定义"><a href="#Dart-变量定义" class="headerlink" title="Dart 变量定义"></a>Dart 变量定义</h3><ul><li>使用 <code>var</code> 定义变量</li><li>使用 <code>数据类型</code> 定义变量</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Str = <span class="string">'使用 var 定义的变量'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">String</span> Str = <span class="string">'使用 数据类型 定义的变量'</span>;</span><br><span class="line"><span class="built_in">int</span> Int = <span class="number">12</span>;</span><br></pre></td></tr></table></figure><h3 id="Dart-常量定义"><a href="#Dart-常量定义" class="headerlink" title="Dart 常量定义"></a>Dart 常量定义</h3><ul><li>const</li><li>final</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> NAME = <span class="string">'nike'</span>;</span><br><span class="line"><span class="keyword">final</span> ID = <span class="string">'12'</span>;</span><br></pre></td></tr></table></figure><h3 id="Dart-const-与-final-的区别"><a href="#Dart-const-与-final-的区别" class="headerlink" title="Dart const 与 final 的区别"></a>Dart <code>const</code> 与 <code>final</code> 的区别</h3><h3 id="Dart-的吗，命名规则"><a href="#Dart-的吗，命名规则" class="headerlink" title="Dart 的吗，命名规则"></a>Dart 的吗，命名规则</h3><ul><li>1、变量名必须由数字、字母、下划线和美元符号（$）组成</li><li>2、标识符开头不能是数字</li><li>3、标识符不能是保留字和关键字</li><li>4、变量的名称是区分大小写的</li><li>5、标识符（变量的名称）一定要见名知意：变量名建议是名词，方法名建议是动词</li></ul><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span> list = [<span class="number">1</span>,<span class="number">23</span>,<span class="number">123</span>,<span class="number">123</span>];</span><br><span class="line"></span><br><span class="line">list.forEach((value) =&gt; &#123;</span><br><span class="line">  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;程序主入口&quot;&gt;&lt;a href=&quot;#程序主入口&quot; class=&quot;headerlink&quot; title=&quot;程序主入口&quot;&gt;&lt;/a&gt;程序主入口&lt;/h3&gt;&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
      <category term="Dart" scheme="https://18600917746.github.io/categories/Dart/"/>
    
    
      <category term="Dart" scheme="https://18600917746.github.io/tags/Dart/"/>
    
  </entry>
  
  <entry>
    <title>hello-jsSkill</title>
    <link href="https://18600917746.github.io/2019/06/06/hello-jsSkill/"/>
    <id>https://18600917746.github.io/2019/06/06/hello-jsSkill/</id>
    <published>2019-06-06T02:44:30.000Z</published>
    <updated>2019-06-06T03:24:23.100Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、获取两个数组的交集"><a href="#1、获取两个数组的交集" class="headerlink" title="1、获取两个数组的交集"></a>1、获取两个数组的交集</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> list1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]; </span><br><span class="line"><span class="keyword">var</span> list2 = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> intersection = <span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> s = <span class="keyword">new</span> <span class="built_in">Set</span>(b);</span><br><span class="line">  <span class="keyword">return</span> a.filter(<span class="function"><span class="params">x</span> =&gt;</span> s.has(x));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">intersection(list1,list2);</span><br></pre></td></tr></table></figure><h3 id="2、替换手机号码中间4位为"><a href="#2、替换手机号码中间4位为" class="headerlink" title="2、替换手机号码中间4位为 ****"></a>2、替换手机号码中间4位为 ****</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> protectPhone = <span class="function">(<span class="params">phone</span>)=&gt;</span> phone.replace(<span class="regexp">/(\d&#123;3&#125;)\d&#123;4&#125;(\d&#123;4&#125;)/</span>, <span class="string">'$1****$2'</span>);</span><br><span class="line"></span><br><span class="line">protectPhone(<span class="string">'18600910010'</span>);</span><br></pre></td></tr></table></figure><h3 id="3、对象数组指定-key-排序"><a href="#3、对象数组指定-key-排序" class="headerlink" title="3、对象数组指定 key 排序"></a>3、对象数组指定 <code>key</code> 排序</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> list = [&#123;</span><br><span class="line">    name:<span class="string">'n1'</span>,</span><br><span class="line">    id:<span class="number">1</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">    name:<span class="string">'n2'</span>,</span><br><span class="line">    id:<span class="number">2</span></span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> objSort=<span class="function">(<span class="params">key,sortType</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function">(<span class="params">a,b</span>)=&gt;</span> sortType ? a[key] - b[key] : b[key] - a[key];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">list.sort(objSort(<span class="string">'name'</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1、获取两个数组的交集&quot;&gt;&lt;a href=&quot;#1、获取两个数组的交集&quot; class=&quot;headerlink&quot; title=&quot;1、获取两个数组的交集&quot;&gt;&lt;/a&gt;1、获取两个数组的交集&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;
      
    
    </summary>
    
      <category term="前端" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Js" scheme="https://18600917746.github.io/categories/%E5%89%8D%E7%AB%AF/Js/"/>
    
    
      <category term="Js片段" scheme="https://18600917746.github.io/tags/Js%E7%89%87%E6%AE%B5/"/>
    
  </entry>
  
  <entry>
    <title>hello-flutter-SharedPreference</title>
    <link href="https://18600917746.github.io/2019/05/31/hello-flutter-SharedPreference/"/>
    <id>https://18600917746.github.io/2019/05/31/hello-flutter-SharedPreference/</id>
    <published>2019-05-31T07:53:10.000Z</published>
    <updated>2019-05-31T09:20:17.691Z</updated>
    
    <content type="html"><![CDATA[<h3 id="shared-preferences-dart-第三方组件"><a href="#shared-preferences-dart-第三方组件" class="headerlink" title="shared_preferences.dart 第三方组件"></a>shared_preferences.dart 第三方组件</h3><ul><li>shared_preferences.dart 官方开源的轻量级数据存储库，并且屏蔽了 Android 和 iOS 平台上使用 K-V 型数据的差异</li></ul><h3 id="使用-shared-preferences-dart-前需要添加配置并更新依赖："><a href="#使用-shared-preferences-dart-前需要添加配置并更新依赖：" class="headerlink" title="使用 shared_preferences.dart 前需要添加配置并更新依赖："></a>使用 shared_preferences.dart 前需要添加配置并更新依赖：</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">shared_preferences:</span> <span class="string">^0.5.1+1</span></span><br></pre></td></tr></table></figure><h3 id="然后，在需要使用该库的地方引入该库："><a href="#然后，在需要使用该库的地方引入该库：" class="headerlink" title="然后，在需要使用该库的地方引入该库："></a>然后，在需要使用该库的地方引入该库：</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:shared_preferences/shared_preferences.dart'</span>;</span><br></pre></td></tr></table></figure><p>###<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharedPreferences sharedPreferences = <span class="keyword">await</span> SharedPreferences.getInstance();</span><br></pre></td></tr></table></figure></p><h3 id="读写数据"><a href="#读写数据" class="headerlink" title="读写数据"></a>读写数据</h3><blockquote><p>获取到 SharedPreferences 对象之后，我们可以通过一系列的 get 和 set 方法读写数据。目前 shared_preferences.dart 库支持的数据类型有：</p></blockquote><ul><li><code>bool</code>：布尔型数据，对应 <code>getBool</code> 和 <code>setBool</code> 两个方法</li><li><code>int</code>：<code>int</code> 型数据，对应 <code>getInt</code> 和 <code>setInt</code> 两个方法</li><li><code>double</code>：<code>double</code> 型数据，对应 <code>getDouble</code> 和 <code>setDouble</code> 两个方法</li><li><code>String</code>：<code>String</code> 型数据，对应 <code>getString</code> 和 <code>setString</code> 两个方法</li><li><code>List&lt;String&gt;</code>：<code>List&lt;String&gt;</code> 型数据，对用 <code>getStringList</code> 和 <code>setStringList</code> 两个方法</li></ul><h3 id="写入数据的示例："><a href="#写入数据的示例：" class="headerlink" title="写入数据的示例："></a>写入数据的示例：</h3><ul><li>写入数据需要使用 await </li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = <span class="keyword">await</span> sharedPreferences.setString(<span class="string">"key"</span>, <span class="string">"value"</span>);</span><br></pre></td></tr></table></figure><h3 id="下面是读取数据的示例："><a href="#下面是读取数据的示例：" class="headerlink" title="下面是读取数据的示例："></a>下面是读取数据的示例：</h3><ul><li>读取操作并不需要使用 await。</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> result = sharedPreferences.getString(<span class="string">"key"</span>);</span><br></pre></td></tr></table></figure><h3 id="清空数据"><a href="#清空数据" class="headerlink" title="清空数据"></a>清空数据</h3><ul><li>SharedPreferences 中提供了 remove 方法用来删除特定 key 的数据，以及 clear 方法用于删除所有的数据:</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> sharedPreferences.remove(<span class="string">"key"</span>);</span><br><span class="line"><span class="keyword">await</span> sharedPreferences.clear();</span><br></pre></td></tr></table></figure><h3 id="问题处理一"><a href="#问题处理一" class="headerlink" title="问题处理一"></a>问题处理一</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.MissingPluginException(No implementation found for method getAll on channel plugins.flutter.io/shared_preferences)</span><br></pre></td></tr></table></figure><ul><li>也就是说，在你测试代码使用shared_preferences之前，调用一下</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharedPreferences.setMockInitialValues(&#123;&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;shared-preferences-dart-第三方组件&quot;&gt;&lt;a href=&quot;#shared-preferences-dart-第三方组件&quot; class=&quot;headerlink&quot; title=&quot;shared_preferences.dart 第三方组件&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="App" scheme="https://18600917746.github.io/categories/App/"/>
    
      <category term="Flutter" scheme="https://18600917746.github.io/categories/App/Flutter/"/>
    
      <category term="SharedPreference" scheme="https://18600917746.github.io/categories/App/Flutter/SharedPreference/"/>
    
    
      <category term="App" scheme="https://18600917746.github.io/tags/App/"/>
    
      <category term="Flutter" scheme="https://18600917746.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>hello-flutter-http</title>
    <link href="https://18600917746.github.io/2019/05/30/hello-flutter-http/"/>
    <id>https://18600917746.github.io/2019/05/30/hello-flutter-http/</id>
    <published>2019-05-30T09:46:00.000Z</published>
    <updated>2019-06-06T09:22:39.686Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用第三方库"><a href="#使用第三方库" class="headerlink" title="使用第三方库"></a>使用第三方库</h3><p><a href="https://pub.dev/" target="_blank" rel="noopener">https://pub.dev/</a></p><h3 id="快速生成实体类："><a href="#快速生成实体类：" class="headerlink" title="快速生成实体类："></a>快速生成实体类：</h3><p><a href="https://app.quicktype.io/" target="_blank" rel="noopener">https://app.quicktype.io/</a></p><h3 id="http-http-dart"><a href="#http-http-dart" class="headerlink" title="http/http.dart"></a>http/http.dart</h3><blockquote><p>package:http/http.dart 是一个开源的基于 Flutter 的网络请求框架。</p></blockquote><ul><li>使用 http/http.dart 库之前，我们需要先在 pubspec.yaml 文件中添加改库的依赖：</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dependencies:</span></span><br><span class="line"><span class="attr">  http:</span> <span class="string">^0.12.0+1</span></span><br></pre></td></tr></table></figure><ul><li>然后在项目的根目录使用如下命令安装该库：</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">flutter</span> <span class="string">packages</span> <span class="string">get</span></span><br></pre></td></tr></table></figure><ul><li>最后，在项目中需要使用的地方引入该库：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:http/http.dart'</span>;</span><br></pre></td></tr></table></figure><ul><li>或者使用别名的引用方式：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:http/http.dart'</span> <span class="keyword">as</span> http;</span><br></pre></td></tr></table></figure><h3 id="get-请求"><a href="#get-请求" class="headerlink" title="get 请求"></a><code>get</code> 请求</h3><ul><li>使用 <code>http/http.dart</code> 发送 <code>GET</code> 请求的实例代码如下：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:convert'</span> <span class="keyword">as</span> convert;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:http/http.dart'</span> <span class="keyword">as</span> http;</span><br><span class="line"></span><br><span class="line">httpRequestGet() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> url = <span class="string">'http://tj.nineton.cn/Heart/index/all?city=CHSH000000&amp;language=zh-chs'</span>;</span><br><span class="line">  http.Response response = <span class="keyword">await</span> http.<span class="keyword">get</span>(url);</span><br><span class="line">  <span class="keyword">if</span> (response.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonResponse = convert.jsonDecode(response.body);</span><br><span class="line">    <span class="keyword">var</span> itemCount = jsonResponse[<span class="string">'totalItems'</span>];</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Number of books about http: <span class="subst">$itemCount</span>."</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Request failed with status: <span class="subst">$&#123;response.statusCode&#125;</span>."</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>或者使用如下方式：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:convert'</span> <span class="keyword">as</span> convert;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:http/http.dart'</span> <span class="keyword">as</span> http;</span><br><span class="line"></span><br><span class="line">httpRequestGet() &#123;</span><br><span class="line">  <span class="keyword">var</span> url = <span class="string">'http://tj.nineton.cn/Heart/index/all?city=CHSH000000&amp;language=zh-chs'</span>;</span><br><span class="line">  http.Client().<span class="keyword">get</span>(url).then((http.Response response) &#123;</span><br><span class="line">    <span class="keyword">if</span> (response.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> jsonResponse = convert.jsonDecode(response.body);</span><br><span class="line">      <span class="keyword">var</span> itemCount = jsonResponse[<span class="string">'totalItems'</span>];</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">"Number of books about http: <span class="subst">$itemCount</span>."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="POST-请求"><a href="#POST-请求" class="headerlink" title="POST 请求"></a><code>POST</code> 请求</h3><ul><li>与 <code>GET</code> 请求不同的是，<code>POST</code> 请求需要将数据写入到 <code>body</code> 里面：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:convert'</span> <span class="keyword">as</span> convert;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:http/http.dart'</span> <span class="keyword">as</span> http;</span><br><span class="line"></span><br><span class="line">httpRequestPost() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> url = <span class="string">"request_url"</span>;</span><br><span class="line">  <span class="keyword">var</span> params = <span class="keyword">new</span> <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt;();</span><br><span class="line">  params[<span class="string">'param_1'</span>] = <span class="string">"value_1"</span>;</span><br><span class="line">  params[<span class="string">'param_2'</span>] = <span class="string">"value_2"</span>;</span><br><span class="line">  params[<span class="string">'param_3'</span>] = <span class="string">"value_3"</span>;</span><br><span class="line">  <span class="keyword">var</span> client = http.Client();</span><br><span class="line">  http.Response response = <span class="keyword">await</span> client.post(url, body: params);</span><br><span class="line">  <span class="keyword">if</span> (response.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> responseMessage = response.body;</span><br><span class="line">    <span class="built_in">print</span>(responseMessage);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>同样的，上述请求也可以使用如下代码实现：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">import</span> <span class="string">'dart:convert'</span> <span class="keyword">as</span> convert;</span><br><span class="line"> <span class="keyword">import</span> <span class="string">'package:http/http.dart'</span> <span class="keyword">as</span> http;</span><br><span class="line"></span><br><span class="line">httpRequestPost() &#123;</span><br><span class="line">   <span class="keyword">var</span> url = <span class="string">"request_url"</span>;</span><br><span class="line">   <span class="keyword">var</span> params = <span class="keyword">new</span> <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt;();</span><br><span class="line">   params[<span class="string">'param_1'</span>] = <span class="string">"value_1"</span>;</span><br><span class="line">   params[<span class="string">'param_2'</span>] = <span class="string">"value_2"</span>;</span><br><span class="line">   params[<span class="string">'param_3'</span>] = <span class="string">"value_3"</span>;</span><br><span class="line">   http.Client().post(url, body: params).then((http.Response response) &#123;</span><br><span class="line">     <span class="keyword">if</span> (response.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">       <span class="keyword">var</span> responseMessage = response.body;</span><br><span class="line">       <span class="built_in">print</span>(responseMessage);</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="重要的事情放在最后面，http-一般使用第三方工具库-Dio"><a href="#重要的事情放在最后面，http-一般使用第三方工具库-Dio" class="headerlink" title="重要的事情放在最后面，http 一般使用第三方工具库 Dio"></a>重要的事情放在最后面，<code>http</code> 一般使用第三方工具库 <code>Dio</code></h2><p><a href="https://github.com/flutterchina/dio" target="_blank" rel="noopener">Dio</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;使用第三方库&quot;&gt;&lt;a href=&quot;#使用第三方库&quot; class=&quot;headerlink&quot; title=&quot;使用第三方库&quot;&gt;&lt;/a&gt;使用第三方库&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://pub.dev/&quot; target=&quot;_blank&quot; rel=&quot;noopen
      
    
    </summary>
    
      <category term="App" scheme="https://18600917746.github.io/categories/App/"/>
    
      <category term="Flutter" scheme="https://18600917746.github.io/categories/App/Flutter/"/>
    
      <category term="Http" scheme="https://18600917746.github.io/categories/App/Flutter/Http/"/>
    
    
      <category term="App" scheme="https://18600917746.github.io/tags/App/"/>
    
      <category term="Flutter" scheme="https://18600917746.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>hello-flutter-routes</title>
    <link href="https://18600917746.github.io/2019/05/30/hello-flutter-routes/"/>
    <id>https://18600917746.github.io/2019/05/30/hello-flutter-routes/</id>
    <published>2019-05-30T06:55:26.000Z</published>
    <updated>2019-06-06T09:25:22.838Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Navigator提供了操作-Routes-的两种方法：-Navigator-push-和-Navigator-pop。"><a href="#Navigator提供了操作-Routes-的两种方法：-Navigator-push-和-Navigator-pop。" class="headerlink" title="Navigator提供了操作 Routes 的两种方法： Navigator.push 和 Navigator.pop。"></a>Navigator提供了操作 Routes 的两种方法： Navigator.push 和 Navigator.pop。</h3><ul><li>Navigator.pushNamed<ul><li>使用 <code>Navigator.pushNamed</code> 方法的 <code>arguments</code> 来传递参数</li><li>使用 <code>ModalRoute</code> 接收数据<figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Navigator.pushNamed(context, <span class="string">'/Citys'</span>,arguments: curCity);</span><br></pre></td></tr></table></figure></li></ul></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ModalRoute.of(context).settings.arguments</span><br></pre></td></tr></table></figure><ul><li>Navigator.pop</li></ul><h3 id="在-Flutter-中获取-Navigator-的实例"><a href="#在-Flutter-中获取-Navigator-的实例" class="headerlink" title="在 Flutter 中获取 Navigator 的实例"></a>在 Flutter 中获取 Navigator 的实例</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Navigator.of(context);</span><br></pre></td></tr></table></figure><h3 id="路由数据传递"><a href="#路由数据传递" class="headerlink" title="路由数据传递"></a>路由数据传递</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">InheritedWidget</span><br></pre></td></tr></table></figure><h2 id="重要的事情放在最后面，路由管理一般使用第三方库-FLURO"><a href="#重要的事情放在最后面，路由管理一般使用第三方库-FLURO" class="headerlink" title="重要的事情放在最后面，路由管理一般使用第三方库 FLURO"></a>重要的事情放在最后面，路由管理一般使用第三方库 <code>FLURO</code></h2><p><a href="https://github.com/theyakka/fluro" target="_blank" rel="noopener">FLURO</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Navigator提供了操作-Routes-的两种方法：-Navigator-push-和-Navigator-pop。&quot;&gt;&lt;a href=&quot;#Navigator提供了操作-Routes-的两种方法：-Navigator-push-和-Navigator-pop。
      
    
    </summary>
    
      <category term="App" scheme="https://18600917746.github.io/categories/App/"/>
    
      <category term="Flutter" scheme="https://18600917746.github.io/categories/App/Flutter/"/>
    
      <category term="Routes" scheme="https://18600917746.github.io/categories/App/Flutter/Routes/"/>
    
    
      <category term="App" scheme="https://18600917746.github.io/tags/App/"/>
    
      <category term="Flutter" scheme="https://18600917746.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>hello-flutter-icon</title>
    <link href="https://18600917746.github.io/2019/05/24/hello-flutter-icon/"/>
    <id>https://18600917746.github.io/2019/05/24/hello-flutter-icon/</id>
    <published>2019-05-24T08:12:51.000Z</published>
    <updated>2019-05-24T08:14:32.125Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第三方-icon-使用"><a href="#第三方-icon-使用" class="headerlink" title="第三方 icon 使用"></a>第三方 <code>icon</code> 使用</h2><p><a href="http://fluttericon.com/" target="_blank" rel="noopener">fluttericon</a></p><h3 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第三方-icon-使用&quot;&gt;&lt;a href=&quot;#第三方-icon-使用&quot; class=&quot;headerlink&quot; title=&quot;第三方 icon 使用&quot;&gt;&lt;/a&gt;第三方 &lt;code&gt;icon&lt;/code&gt; 使用&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://flutt
      
    
    </summary>
    
      <category term="App" scheme="https://18600917746.github.io/categories/App/"/>
    
      <category term="Flutter" scheme="https://18600917746.github.io/categories/App/Flutter/"/>
    
      <category term="Icon" scheme="https://18600917746.github.io/categories/App/Flutter/Icon/"/>
    
    
      <category term="App" scheme="https://18600917746.github.io/tags/App/"/>
    
      <category term="Flutter" scheme="https://18600917746.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>hello-小程序</title>
    <link href="https://18600917746.github.io/2019/05/23/hello-%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <id>https://18600917746.github.io/2019/05/23/hello-小程序/</id>
    <published>2019-05-23T07:35:43.000Z</published>
    <updated>2019-05-23T09:12:23.753Z</updated>
    
    <content type="html"><![CDATA[<h3 id="原生走一波"><a href="#原生走一波" class="headerlink" title="原生走一波"></a>原生走一波</h3><blockquote><ol><li>安装开发工具</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><ol start="2"><li>【测试号】创建项目</li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;原生走一波&quot;&gt;&lt;a href=&quot;#原生走一波&quot; class=&quot;headerlink&quot; title=&quot;原生走一波&quot;&gt;&lt;/a&gt;原生走一波&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;安装开发工具&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;figure
      
    
    </summary>
    
      <category term="小程序" scheme="https://18600917746.github.io/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="原生" scheme="https://18600917746.github.io/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E5%8E%9F%E7%94%9F/"/>
    
    
      <category term="小程序" scheme="https://18600917746.github.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>hello-cordova-platforms</title>
    <link href="https://18600917746.github.io/2019/05/16/hello-cordova-platforms/"/>
    <id>https://18600917746.github.io/2019/05/16/hello-cordova-platforms/</id>
    <published>2019-05-16T03:18:11.000Z</published>
    <updated>2019-05-16T03:38:30.470Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看本机可安装的平台"><a href="#查看本机可安装的平台" class="headerlink" title="查看本机可安装的平台"></a>查看本机可安装的平台</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova platforms list</span><br></pre></td></tr></table></figure><h3 id="查看安装平台的先决条件"><a href="#查看安装平台的先决条件" class="headerlink" title="查看安装平台的先决条件"></a>查看安装平台的先决条件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova requirements</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;查看本机可安装的平台&quot;&gt;&lt;a href=&quot;#查看本机可安装的平台&quot; class=&quot;headerlink&quot; title=&quot;查看本机可安装的平台&quot;&gt;&lt;/a&gt;查看本机可安装的平台&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
      <category term="App" scheme="https://18600917746.github.io/categories/App/"/>
    
      <category term="Cordova" scheme="https://18600917746.github.io/categories/App/Cordova/"/>
    
      <category term="Platforms" scheme="https://18600917746.github.io/categories/App/Cordova/Platforms/"/>
    
    
      <category term="App" scheme="https://18600917746.github.io/tags/App/"/>
    
      <category term="Cordova" scheme="https://18600917746.github.io/tags/Cordova/"/>
    
  </entry>
  
  <entry>
    <title>hello-cordova-plugin</title>
    <link href="https://18600917746.github.io/2019/05/16/hello-cordova-plugin/"/>
    <id>https://18600917746.github.io/2019/05/16/hello-cordova-plugin/</id>
    <published>2019-05-16T01:39:31.000Z</published>
    <updated>2019-05-16T07:04:58.549Z</updated>
    
    <content type="html"><![CDATA[<h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><blockquote><p>cordova-plugin-splashscreen  启动图+app图标</p></blockquote><ul><li><p>安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin add cordova-plugin-splashscreen</span><br></pre></td></tr></table></figure></li><li><p>基本配置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">platform</span> <span class="attr">name</span>=<span class="string">"android"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">density</span>=<span class="string">"ldpi"</span> <span class="attr">src</span>=<span class="string">"res/icon/android/drawable-ldpi/icon.png"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">density</span>=<span class="string">"mdpi"</span> <span class="attr">src</span>=<span class="string">"res/icon/android/drawable-mdpi/icon.png"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">density</span>=<span class="string">"hdpi"</span> <span class="attr">src</span>=<span class="string">"res/icon/android/drawable-hdpi/icon.png"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">density</span>=<span class="string">"xhdpi"</span> <span class="attr">src</span>=<span class="string">"res/icon/android/drawable-xhdpi/icon.png"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">density</span>=<span class="string">"xxhdpi"</span> <span class="attr">src</span>=<span class="string">"res/icon/android/drawable-xxhdpi/icon.png"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 以下是欢迎页面，可根据需要进行添加 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">"land-hdpi"</span> <span class="attr">src</span>=<span class="string">"res/screen/android/splash-land-hdpi.png"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">"land-ldpi"</span> <span class="attr">src</span>=<span class="string">"res/screen/android/splash-land-ldpi.png"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">"land-mdpi"</span> <span class="attr">src</span>=<span class="string">"res/screen/android/splash-land-mdpi.png"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">"land-xhdpi"</span> <span class="attr">src</span>=<span class="string">"res/screen/android/splash-land-xhdpi.png"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">"port-hdpi"</span> <span class="attr">src</span>=<span class="string">"res/screen/android/splash-port-hdpi.png"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">"port-ldpi"</span> <span class="attr">src</span>=<span class="string">"res/screen/android/splash-port-ldpi.png"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">"port-mdpi"</span> <span class="attr">src</span>=<span class="string">"res/screen/android/splash-port-mdpi.png"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">density</span>=<span class="string">"port-xhdpi"</span> <span class="attr">src</span>=<span class="string">"res/screen/android/splash-port-xhdpi.png"</span> /&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">platform</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">platform</span> <span class="attr">name</span>=<span class="string">"ios"</span>&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iOS 8.0+ --&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iPhone 6 Plus  --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-60@3x.png"</span> <span class="attr">width</span>=<span class="string">"180"</span> <span class="attr">height</span>=<span class="string">"180"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iOS 7.0+ --&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iPhone / iPod Touch  --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-60.png"</span> <span class="attr">width</span>=<span class="string">"60"</span> <span class="attr">height</span>=<span class="string">"60"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-60@2x.png"</span> <span class="attr">width</span>=<span class="string">"120"</span> <span class="attr">height</span>=<span class="string">"120"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iPad --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-76.png"</span> <span class="attr">width</span>=<span class="string">"76"</span> <span class="attr">height</span>=<span class="string">"76"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-76@2x.png"</span> <span class="attr">width</span>=<span class="string">"152"</span> <span class="attr">height</span>=<span class="string">"152"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iOS 6.1 --&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- Spotlight Icon --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-40.png"</span> <span class="attr">width</span>=<span class="string">"40"</span> <span class="attr">height</span>=<span class="string">"40"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-40@2x.png"</span> <span class="attr">width</span>=<span class="string">"80"</span> <span class="attr">height</span>=<span class="string">"80"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iPhone / iPod Touch --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon.png"</span> <span class="attr">width</span>=<span class="string">"57"</span> <span class="attr">height</span>=<span class="string">"57"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon@2x.png"</span> <span class="attr">width</span>=<span class="string">"114"</span> <span class="attr">height</span>=<span class="string">"114"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iPad --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-72.png"</span> <span class="attr">width</span>=<span class="string">"72"</span> <span class="attr">height</span>=<span class="string">"72"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-72@2x.png"</span> <span class="attr">width</span>=<span class="string">"144"</span> <span class="attr">height</span>=<span class="string">"144"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iPhone Spotlight and Settings Icon --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-small.png"</span> <span class="attr">width</span>=<span class="string">"29"</span> <span class="attr">height</span>=<span class="string">"29"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-small@2x.png"</span> <span class="attr">width</span>=<span class="string">"58"</span> <span class="attr">height</span>=<span class="string">"58"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- iPad Spotlight and Settings Icon --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-50.png"</span> <span class="attr">width</span>=<span class="string">"50"</span> <span class="attr">height</span>=<span class="string">"50"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">src</span>=<span class="string">"res/icon/ios/icon-50@2x.png"</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"100"</span> /&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- 以下是欢迎页面，可根据需要进行添加 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default~iphone.png"</span> <span class="attr">width</span>=<span class="string">"320"</span> <span class="attr">height</span>=<span class="string">"480"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default@2x~iphone.png"</span> <span class="attr">width</span>=<span class="string">"640"</span> <span class="attr">height</span>=<span class="string">"960"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default-Portrait~ipad.png"</span> <span class="attr">width</span>=<span class="string">"768"</span> <span class="attr">height</span>=<span class="string">"1024"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default-Portrait@2x~ipad.png"</span> <span class="attr">width</span>=<span class="string">"1536"</span> <span class="attr">height</span>=<span class="string">"2048"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default-Landscape~ipad.png"</span> <span class="attr">width</span>=<span class="string">"1024"</span> <span class="attr">height</span>=<span class="string">"768"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default-Landscape@2x~ipad.png"</span> <span class="attr">width</span>=<span class="string">"2048"</span> <span class="attr">height</span>=<span class="string">"1536"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default-568h@2x~iphone.png"</span> <span class="attr">width</span>=<span class="string">"640"</span> <span class="attr">height</span>=<span class="string">"1136"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default-667h.png"</span> <span class="attr">width</span>=<span class="string">"750"</span> <span class="attr">height</span>=<span class="string">"1334"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default-736h.png"</span> <span class="attr">width</span>=<span class="string">"1242"</span> <span class="attr">height</span>=<span class="string">"2208"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">splash</span> <span class="attr">src</span>=<span class="string">"res/screen/ios/Default-Landscape-736h.png"</span> <span class="attr">width</span>=<span class="string">"2208"</span> <span class="attr">height</span>=<span class="string">"1242"</span>/&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">platform</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>其他配置</p><ul><li><p>自动隐藏启动页面AutoHideSplashScreen（默认为：true）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">preference</span> <span class="attr">name</span>=<span class="string">"AutoHideSplashScreen"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>显示启动页面的时间长度SplashScreenDelay(默认为：3000)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">preference</span> <span class="attr">name</span>=<span class="string">"SplashScreenDelay"</span> <span class="attr">value</span>=<span class="string">"3000"</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>若想禁用启动页面，可设置为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">preference</span> <span class="attr">name</span>=<span class="string">"SplashScreenDelay"</span> <span class="attr">value</span>=<span class="string">"0"</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>如果是iOS平台上想禁止启动页面，还需要添加：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">preference</span> <span class="attr">name</span>=<span class="string">"FadeSplashScreenDuration"</span> <span class="attr">value</span>=<span class="string">"0"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>启动页面淡入淡出的效果</p><ul><li><p>是否显示淡入淡出效果FadeSplashScreen(默认为：true)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">preference</span> <span class="attr">name</span>=<span class="string">"FadeSplashScreen"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>淡入淡出效果的执行时间长度FadeSplashScreenDuration(默认为：500)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">preference</span> <span class="attr">name</span>=<span class="string">"FadeSplashScreenDuration"</span> <span class="attr">value</span>=<span class="string">"750"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>启动页面是否允许旋转（默认为：true）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">preference</span> <span class="attr">name</span>=<span class="string">"ShowSplashScreenSpinner"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>插件还可以通过js代码调用，提供有以下两个方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">navigator.splashscreen.hide();<span class="comment">//隐藏启动页面</span></span><br><span class="line"> </span><br><span class="line">navigator.splashscreen.show();<span class="comment">//显示启动页面</span></span><br></pre></td></tr></table></figure></li><li><p>图标文件夹内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">projectRoot</span><br><span class="line">    hooks</span><br><span class="line">    platforms</span><br><span class="line">    plugins</span><br><span class="line">    www</span><br><span class="line">        css</span><br><span class="line">        img</span><br><span class="line">        js</span><br><span class="line">    res</span><br><span class="line">        screen</span><br><span class="line">            android</span><br><span class="line">            ios</span><br><span class="line">        icon</span><br><span class="line">            android</span><br><span class="line">            ios</span><br></pre></td></tr></table></figure></li><li><p>安卓</p><ul><li><p>安卓图标具体规格如下（存放目录：res/icon/android/）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">36*36    drawable-ldpi/icon.png</span><br><span class="line">48*48    drawable-mdpi/icon.png</span><br><span class="line">72*72    drawable-hdpi/icon.png</span><br><span class="line">96*96    drawable-xhdpi/icon.png</span><br><span class="line">144*144  drawable-xxhdpi/icon.png</span><br></pre></td></tr></table></figure></li><li><p>iOS图标具体规格如下（存放目录：res/icon/ios/）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">57*57   icon.png</span><br><span class="line">114*114 icon@2x.png</span><br><span class="line">29*29   icon-small.png</span><br><span class="line">58*58   icon-small@2x.png</span><br><span class="line">40*40   icon-40.png</span><br><span class="line">80*80   icon-40@2x.png</span><br><span class="line">50*50   icon-50.png</span><br><span class="line">100*100 icon-50@2x.png</span><br><span class="line">60*60   icon-60.png</span><br><span class="line">120*120 icon-60@2x.png</span><br><span class="line">180*180 icon-60@3x.png</span><br><span class="line">72*72   icon-72.png</span><br><span class="line">144*144 icon-72@2x.png</span><br><span class="line">76*76   icon-76.png</span><br><span class="line">152*152 icon-76@2x.png</span><br></pre></td></tr></table></figure></li></ul></li><li><p>ios</p><ul><li><p>ios图标具体规格如下（存放目录：res/icon/ios/）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">960*720 splash-land-xhdpi.png</span><br><span class="line">640*480 splash-land-hdpi.png</span><br><span class="line">470*320 splash-land-mdpi.png</span><br><span class="line">426*320 splash-land-ldpi.png</span><br><span class="line">720*960 splash-port-xhdpi.png</span><br><span class="line">480*640 splash-port-hdpi.png</span><br><span class="line">320*470 splash-port-mdpi.png</span><br><span class="line">320*426 splash-port-ldpi.png</span><br></pre></td></tr></table></figure></li><li><p>iOS启动画面具体规格如下（存放目录：res/screen/ios/）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">320*480     Default~iphone.png</span><br><span class="line">640*960     Default@2x~iphone.png</span><br><span class="line">768*1024    Default-Portrait~ipad.png</span><br><span class="line">1536*2048   Default-Portrait@2x~ipad.png</span><br><span class="line">1024*768    Default-Landscape~ipad.png</span><br><span class="line">2048*1536   Default-Landscape@2x~ipad.png</span><br><span class="line">640*1136    Default-568h@2x~iphone.png</span><br><span class="line">750*1334    Default-667h.png</span><br><span class="line">1242*2208   Default-736h.png</span><br><span class="line">2208*1242   Default-Landscape-736h.png</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><blockquote><p>cordova-plugin-crosswalk-webview  webview</p></blockquote><ul><li>安装插件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin add cordova-plugin-crosswalk-webview</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>phonegap-plugin-barcodescanner  二维码扫描 </p></blockquote><ul><li>安装插件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin add phonegap-plugin-barcodescanner</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;插件&quot;&gt;&lt;a href=&quot;#插件&quot; class=&quot;headerlink&quot; title=&quot;插件&quot;&gt;&lt;/a&gt;插件&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;cordova-plugin-splashscreen  启动图+app图标&lt;/p&gt;
&lt;/blockquote&gt;

      
    
    </summary>
    
      <category term="App" scheme="https://18600917746.github.io/categories/App/"/>
    
      <category term="Cordova" scheme="https://18600917746.github.io/categories/App/Cordova/"/>
    
      <category term="Plugin" scheme="https://18600917746.github.io/categories/App/Cordova/Plugin/"/>
    
    
      <category term="App" scheme="https://18600917746.github.io/tags/App/"/>
    
      <category term="Cordova" scheme="https://18600917746.github.io/tags/Cordova/"/>
    
  </entry>
  
  <entry>
    <title>搭建svn与git服务器</title>
    <link href="https://18600917746.github.io/2019/04/17/%E6%90%AD%E5%BB%BAsvn%E4%B8%8Egit%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://18600917746.github.io/2019/04/17/搭建svn与git服务器/</id>
    <published>2019-04-17T13:17:37.000Z</published>
    <updated>2019-04-17T14:16:40.871Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装-Svn"><a href="#安装-Svn" class="headerlink" title="安装 Svn"></a>安装 Svn</h3><ul><li>安装 svn 管理工具</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install subversion</span><br></pre></td></tr></table></figure><ul><li>创建一个文件夹作为 svn 代码仓库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir svn</span><br></pre></td></tr></table></figure><ul><li>1、初始化仓库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svnadmin create test1</span><br></pre></td></tr></table></figure><ul><li>2、创建用户密码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi test1/conf/passwd</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nsername=password</span><br></pre></td></tr></table></figure><ul><li>3、修改 svn 服务文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi test1/conf/svnserve.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 是否允许匿名访问</span><br><span class="line">anon-access = none</span><br><span class="line">// 授权以后是否可以读写</span><br><span class="line">auth-access = write</span><br><span class="line">// </span><br><span class="line">password-db = passwd</span><br><span class="line">// 开启可能出错</span><br><span class="line">authz = authz</span><br></pre></td></tr></table></figure><ul><li>4、启动 svn 服务器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 检测是否已经开启</span><br><span class="line">ps -ef | greep  svn</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svnserve -d -r 仓库地址</span><br></pre></td></tr></table></figure><h3 id="git-服务器安装"><a href="#git-服务器安装" class="headerlink" title="git 服务器安装"></a>git 服务器安装</h3><ul><li>安装 git 管理工具</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git -y</span><br></pre></td></tr></table></figure><ul><li>创建一个文件夹作为 git 代码仓库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir git</span><br><span class="line">cd git/</span><br></pre></td></tr></table></figure><ul><li>1、初始化仓库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init -- bare test.get</span><br></pre></td></tr></table></figure><ul><li>2、添加一个系统用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd cheng</span><br></pre></td></tr></table></figure><ul><li>3、创建用户名密码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd cheng</span><br></pre></td></tr></table></figure><ul><li>4、修改目录的所有者</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R  xxx:xxx test.get</span><br></pre></td></tr></table></figure><ul><li>5、本地使用</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装-Svn&quot;&gt;&lt;a href=&quot;#安装-Svn&quot; class=&quot;headerlink&quot; title=&quot;安装 Svn&quot;&gt;&lt;/a&gt;安装 Svn&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;安装 svn 管理工具&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight 
      
    
    </summary>
    
      <category term="茶余饭后" scheme="https://18600917746.github.io/categories/%E8%8C%B6%E4%BD%99%E9%A5%AD%E5%90%8E/"/>
    
      <category term="jsCode" scheme="https://18600917746.github.io/categories/%E8%8C%B6%E4%BD%99%E9%A5%AD%E5%90%8E/jsCode/"/>
    
    
      <category term="Git 服务器" scheme="https://18600917746.github.io/tags/Git-%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Svn 服务器" scheme="https://18600917746.github.io/tags/Svn-%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>ie低版本浏览器不兼容提示</title>
    <link href="https://18600917746.github.io/2019/04/17/ie%E4%BD%8E%E7%89%88%E6%9C%AC%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8D%E5%85%BC%E5%AE%B9%E6%8F%90%E7%A4%BA/"/>
    <id>https://18600917746.github.io/2019/04/17/ie低版本浏览器不兼容提示/</id>
    <published>2019-04-17T12:46:32.000Z</published>
    <updated>2019-04-17T12:48:03.937Z</updated>
    
    <content type="html"><![CDATA[<h3 id="上代码"><a href="#上代码" class="headerlink" title="上代码"></a>上代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ua = navigator.userAgent.toLowerCase();</span><br><span class="line">    <span class="keyword">var</span> isIE = ua.indexOf(<span class="string">"msie"</span>);</span><br><span class="line">    <span class="keyword">if</span> (isIE &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span>(ua.indexOf(<span class="string">"msie 8.0"</span>) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>).style.display=<span class="string">"none"</span>;</span><br><span class="line">          <span class="built_in">document</span>.write(<span class="string">'&lt;div style="width: 600px;margin:300px auto"&gt;&lt;img style="width: 100%" src="https://img.kaikeba.com/up_chrome.png" alt="img" /&gt;&lt;/div&gt;'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="keyword">if</span>(ua.indexOf(<span class="string">"msie 7.0"</span>) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>).style.display=<span class="string">"none"</span>;</span><br><span class="line">          <span class="built_in">document</span>.write(<span class="string">'&lt;div style="width: 600px;margin:300px auto"&gt;&lt;img style="width: 100%" src="https://img.kaikeba.com/up_chrome.png" alt="img" /&gt;&lt;/div&gt;'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;上代码&quot;&gt;&lt;a href=&quot;#上代码&quot; class=&quot;headerlink&quot; title=&quot;上代码&quot;&gt;&lt;/a&gt;上代码&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
      
    
    </summary>
    
      <category term="茶余饭后" scheme="https://18600917746.github.io/categories/%E8%8C%B6%E4%BD%99%E9%A5%AD%E5%90%8E/"/>
    
      <category term="jsCode" scheme="https://18600917746.github.io/categories/%E8%8C%B6%E4%BD%99%E9%A5%AD%E5%90%8E/jsCode/"/>
    
    
      <category term="jsCode" scheme="https://18600917746.github.io/tags/jsCode/"/>
    
  </entry>
  
</feed>
